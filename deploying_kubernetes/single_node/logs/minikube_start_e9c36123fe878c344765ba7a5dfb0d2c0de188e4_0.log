Log file created at: 2022/09/20 05:00:59
Running on machine: DESKTOP-9D9FOPT
Binary: Built with gc go1.18.3 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0920 05:00:59.348197   16880 out.go:296] Setting OutFile to fd 92 ...
I0920 05:00:59.349198   16880 out.go:309] Setting ErrFile to fd 96...
I0920 05:00:59.361197   16880 out.go:303] Setting JSON to false
I0920 05:00:59.366197   16880 start.go:115] hostinfo: {"hostname":"DESKTOP-9D9FOPT","uptime":5486,"bootTime":1663662573,"procs":298,"os":"windows","platform":"Microsoft Windows 10 Home","platformFamily":"Standalone Workstation","platformVersion":"10.0.19044 Build 19044","kernelVersion":"10.0.19044 Build 19044","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"1b124a21-ded5-4c8f-8353-aebb67e61cfb"}
W0920 05:00:59.368197   16880 start.go:123] gopshost.Virtualization returned error: not implemented yet
I0920 05:00:59.371716   16880 out.go:177] 😄  minikube v1.26.1 on Microsoft Windows 10 Home 10.0.19044 Build 19044
I0920 05:00:59.372705   16880 notify.go:193] Checking for updates...
I0920 05:00:59.373705   16880 config.go:180] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.24.3
I0920 05:00:59.374706   16880 driver.go:365] Setting default libvirt URI to qemu:///system
I0920 05:00:59.563408   16880 docker.go:137] docker version: linux-20.10.16
I0920 05:00:59.574506   16880 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:00:59.947415   16880 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:1 ContainersRunning:1 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:61 OomKillDisable:true NGoroutines:57 SystemTime:2022-09-20 10:00:59.6960222 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:00:59.951209   16880 out.go:177] ✨  Using the docker driver based on existing profile
I0920 05:00:59.953874   16880 start.go:284] selected driver: docker
I0920 05:00:59.953874   16880 start.go:808] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0920 05:00:59.953874   16880 start.go:819] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0920 05:00:59.979341   16880 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:01:00.347166   16880 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:1 ContainersRunning:1 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:61 OomKillDisable:true NGoroutines:57 SystemTime:2022-09-20 10:01:00.1107054 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:01:00.424432   16880 cni.go:95] Creating CNI manager for ""
I0920 05:01:00.424432   16880 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0920 05:01:00.424432   16880 start_flags.go:310] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0920 05:01:00.430727   16880 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0920 05:01:00.432332   16880 cache.go:120] Beginning downloading kic base image for docker with docker
I0920 05:01:00.433903   16880 out.go:177] 🚜  Pulling base image ...
I0920 05:01:00.436007   16880 preload.go:132] Checking if preload exists for k8s version v1.24.3 and runtime docker
I0920 05:01:00.436007   16880 image.go:75] Checking for gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 in local docker daemon
I0920 05:01:00.436007   16880 preload.go:148] Found local preload: C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4
I0920 05:01:00.436007   16880 cache.go:57] Caching tarball of preloaded images
I0920 05:01:00.436564   16880 preload.go:174] Found C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0920 05:01:00.436564   16880 cache.go:60] Finished verifying existence of preloaded tar for  v1.24.3 on docker
I0920 05:01:00.436564   16880 profile.go:148] Saving config to C:\Users\Esteban\.minikube\profiles\minikube\config.json ...
I0920 05:01:00.595668   16880 image.go:79] Found gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 in local docker daemon, skipping pull
I0920 05:01:00.595668   16880 cache.go:142] gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 exists in daemon, skipping load
I0920 05:01:00.595668   16880 cache.go:208] Successfully downloaded all kic artifacts
I0920 05:01:00.595668   16880 start.go:371] acquiring machines lock for minikube: {Name:mkb1a3f9dd56644c74d06159971e44ffb1f7dc12 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0920 05:01:00.595668   16880 start.go:375] acquired machines lock for "minikube" in 0s
I0920 05:01:00.596193   16880 start.go:95] Skipping create...Using existing machine configuration
I0920 05:01:00.597376   16880 fix.go:55] fixHost starting: 
I0920 05:01:00.619355   16880 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:01:00.797439   16880 fix.go:103] recreateIfNeeded on minikube: state=Running err=<nil>
W0920 05:01:00.797439   16880 fix.go:129] unexpected machine state, will restart: <nil>
I0920 05:01:00.799539   16880 out.go:177] 🏃  Updating the running docker "minikube" container ...
Log file created at: 2022/09/20 05:01:17
Running on machine: DESKTOP-9D9FOPT
Binary: Built with gc go1.18.3 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0920 05:01:17.717018   15200 out.go:296] Setting OutFile to fd 92 ...
I0920 05:01:17.717018   15200 out.go:309] Setting ErrFile to fd 96...
I0920 05:01:17.729016   15200 out.go:303] Setting JSON to false
I0920 05:01:17.733956   15200 start.go:115] hostinfo: {"hostname":"DESKTOP-9D9FOPT","uptime":5504,"bootTime":1663662573,"procs":298,"os":"windows","platform":"Microsoft Windows 10 Home","platformFamily":"Standalone Workstation","platformVersion":"10.0.19044 Build 19044","kernelVersion":"10.0.19044 Build 19044","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"1b124a21-ded5-4c8f-8353-aebb67e61cfb"}
W0920 05:01:17.733956   15200 start.go:123] gopshost.Virtualization returned error: not implemented yet
I0920 05:01:17.795172   15200 out.go:177] 😄  minikube v1.26.1 on Microsoft Windows 10 Home 10.0.19044 Build 19044
I0920 05:01:17.798310   15200 notify.go:193] Checking for updates...
I0920 05:01:17.798855   15200 driver.go:365] Setting default libvirt URI to qemu:///system
I0920 05:01:17.966842   15200 docker.go:137] docker version: linux-20.10.16
I0920 05:01:17.977371   15200 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:01:18.334978   15200 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:51 OomKillDisable:true NGoroutines:52 SystemTime:2022-09-20 10:01:18.0844202 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:01:18.343382   15200 out.go:177] ✨  Using the docker driver based on user configuration
I0920 05:01:18.347639   15200 start.go:284] selected driver: docker
I0920 05:01:18.347639   15200 start.go:808] validating driver "docker" against <nil>
I0920 05:01:18.347639   15200 start.go:819] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0920 05:01:18.369697   15200 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:01:18.768048   15200 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:51 OomKillDisable:true NGoroutines:52 SystemTime:2022-09-20 10:01:18.4915536 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:01:18.768048   15200 start_flags.go:296] no existing cluster config was found, will generate one from the flags 
I0920 05:01:18.798936   15200 start_flags.go:377] Using suggested 4000MB memory alloc based on sys=16190MB, container=12620MB
I0920 05:01:18.798936   15200 start_flags.go:835] Wait components to verify : map[apiserver:true system_pods:true]
I0920 05:01:18.800935   15200 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0920 05:01:18.803212   15200 cni.go:95] Creating CNI manager for ""
I0920 05:01:18.803417   15200 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0920 05:01:18.803417   15200 start_flags.go:310] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0920 05:01:18.812000   15200 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0920 05:01:18.813592   15200 cache.go:120] Beginning downloading kic base image for docker with docker
I0920 05:01:18.818360   15200 out.go:177] 🚜  Pulling base image ...
I0920 05:01:18.820451   15200 preload.go:132] Checking if preload exists for k8s version v1.24.3 and runtime docker
I0920 05:01:18.820451   15200 image.go:75] Checking for gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 in local docker daemon
I0920 05:01:18.820451   15200 preload.go:148] Found local preload: C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4
I0920 05:01:18.820451   15200 cache.go:57] Caching tarball of preloaded images
I0920 05:01:18.820977   15200 preload.go:174] Found C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0920 05:01:18.820977   15200 cache.go:60] Finished verifying existence of preloaded tar for  v1.24.3 on docker
I0920 05:01:18.821504   15200 profile.go:148] Saving config to C:\Users\Esteban\.minikube\profiles\minikube\config.json ...
I0920 05:01:18.821504   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\config.json: {Name:mk2a00695caa01573162753941d974857a7beb3e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:01:18.983385   15200 image.go:79] Found gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 in local docker daemon, skipping pull
I0920 05:01:18.983385   15200 cache.go:142] gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 exists in daemon, skipping load
I0920 05:01:18.983385   15200 cache.go:208] Successfully downloaded all kic artifacts
I0920 05:01:18.983385   15200 start.go:371] acquiring machines lock for minikube: {Name:mkb1a3f9dd56644c74d06159971e44ffb1f7dc12 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0920 05:01:18.983385   15200 start.go:375] acquired machines lock for "minikube" in 0s
I0920 05:01:18.983906   15200 start.go:92] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:} &{Name: IP: Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0920 05:01:18.983906   15200 start.go:132] createHost starting for "" (driver="docker")
I0920 05:01:18.988683   15200 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0920 05:01:18.989203   15200 start.go:166] libmachine.API.Create for "minikube" (driver="docker")
I0920 05:01:18.989203   15200 client.go:168] LocalClient.Create starting
I0920 05:01:18.989203   15200 main.go:134] libmachine: Reading certificate data from C:\Users\Esteban\.minikube\certs\ca.pem
I0920 05:01:18.989203   15200 main.go:134] libmachine: Decoding PEM data...
I0920 05:01:18.989203   15200 main.go:134] libmachine: Parsing certificate...
I0920 05:01:18.989724   15200 main.go:134] libmachine: Reading certificate data from C:\Users\Esteban\.minikube\certs\cert.pem
I0920 05:01:18.989724   15200 main.go:134] libmachine: Decoding PEM data...
I0920 05:01:18.989724   15200 main.go:134] libmachine: Parsing certificate...
I0920 05:01:19.001491   15200 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0920 05:01:19.150644   15200 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0920 05:01:19.161535   15200 network_create.go:272] running [docker network inspect minikube] to gather additional debugging logs...
I0920 05:01:19.161535   15200 cli_runner.go:164] Run: docker network inspect minikube
W0920 05:01:19.320285   15200 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0920 05:01:19.320285   15200 network_create.go:275] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error: No such network: minikube
I0920 05:01:19.320285   15200 network_create.go:277] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error: No such network: minikube

** /stderr **
I0920 05:01:19.335610   15200 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0920 05:01:19.615901   15200 network.go:288] reserving subnet 192.168.49.0 for 1m0s: &{mu:{state:0 sema:0} read:{v:{m:map[] amended:true}} dirty:map[192.168.49.0:0xc000008780] misses:0}
I0920 05:01:19.615901   15200 network.go:235] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:}}
I0920 05:01:19.615901   15200 network_create.go:115] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0920 05:01:19.627423   15200 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0920 05:01:19.841793   15200 network_create.go:99] docker network minikube 192.168.49.0/24 created
I0920 05:01:19.841793   15200 kic.go:106] calculated static IP "192.168.49.2" for the "minikube" container
I0920 05:01:19.865203   15200 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0920 05:01:20.038521   15200 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0920 05:01:20.195596   15200 oci.go:103] Successfully created a docker volume minikube
I0920 05:01:20.206410   15200 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -d /var/lib
I0920 05:01:21.739698   15200 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -d /var/lib: (1.5332079s)
I0920 05:01:21.739698   15200 oci.go:107] Successfully prepared a docker volume minikube
I0920 05:01:21.739698   15200 preload.go:132] Checking if preload exists for k8s version v1.24.3 and runtime docker
I0920 05:01:21.739698   15200 kic.go:179] Starting extracting preloaded images to volume ...
I0920 05:01:21.750415   15200 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -I lz4 -xf /preloaded.tar -C /extractDir
I0920 05:01:56.660667   15200 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -I lz4 -xf /preloaded.tar -C /extractDir: (34.9102523s)
I0920 05:01:56.660667   15200 kic.go:188] duration metric: took 34.920969 seconds to extract preloaded images to volume
I0920 05:01:56.672103   15200 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:01:57.016296   15200 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:50 OomKillDisable:true NGoroutines:52 SystemTime:2022-09-20 10:01:56.7787522 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:01:57.027151   15200 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0920 05:01:57.412273   15200 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4000mb --memory-swap=4000mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8
I0920 05:01:58.154799   15200 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0920 05:01:58.680894   15200 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:02:00.006974   15200 cli_runner.go:217] Completed: docker container inspect minikube --format={{.State.Status}}: (1.3260798s)
I0920 05:02:00.025113   15200 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0920 05:02:00.272587   15200 oci.go:144] the created container "minikube" has a running status.
I0920 05:02:00.272587   15200 kic.go:210] Creating ssh key for kic: C:\Users\Esteban\.minikube\machines\minikube\id_rsa...
I0920 05:02:00.495293   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\machines\minikube\id_rsa.pub -> /home/docker/.ssh/authorized_keys
I0920 05:02:00.499292   15200 kic_runner.go:191] docker (temp): C:\Users\Esteban\.minikube\machines\minikube\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0920 05:02:00.719565   15200 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:02:00.890133   15200 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0920 05:02:00.890133   15200 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0920 05:02:01.147267   15200 kic.go:250] ensuring only current user has permissions to key file located at : C:\Users\Esteban\.minikube\machines\minikube\id_rsa...
I0920 05:02:01.506447   15200 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:02:01.640105   15200 machine.go:88] provisioning docker machine ...
I0920 05:02:01.640105   15200 ubuntu.go:169] provisioning hostname "minikube"
I0920 05:02:01.650360   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:01.800890   15200 main.go:134] libmachine: Using SSH client type: native
I0920 05:02:01.804674   15200 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55551 <nil> <nil>}
I0920 05:02:01.804674   15200 main.go:134] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0920 05:02:01.927439   15200 main.go:134] libmachine: SSH cmd err, output: <nil>: minikube

I0920 05:02:01.937971   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:02.079057   15200 main.go:134] libmachine: Using SSH client type: native
I0920 05:02:02.079057   15200 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55551 <nil> <nil>}
I0920 05:02:02.079057   15200 main.go:134] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0920 05:02:02.198217   15200 main.go:134] libmachine: SSH cmd err, output: <nil>: 
I0920 05:02:02.198721   15200 ubuntu.go:175] set auth options {CertDir:C:\Users\Esteban\.minikube CaCertPath:C:\Users\Esteban\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\Esteban\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\Esteban\.minikube\machines\server.pem ServerKeyPath:C:\Users\Esteban\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\Esteban\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\Esteban\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\Esteban\.minikube}
I0920 05:02:02.198756   15200 ubuntu.go:177] setting up certificates
I0920 05:02:02.198756   15200 provision.go:83] configureAuth start
I0920 05:02:02.209093   15200 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0920 05:02:02.348728   15200 provision.go:138] copyHostCerts
I0920 05:02:02.348728   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\ca.pem -> C:\Users\Esteban\.minikube/ca.pem
I0920 05:02:02.348728   15200 exec_runner.go:144] found C:\Users\Esteban\.minikube/ca.pem, removing ...
I0920 05:02:02.348728   15200 exec_runner.go:207] rm: C:\Users\Esteban\.minikube\ca.pem
I0920 05:02:02.348728   15200 exec_runner.go:151] cp: C:\Users\Esteban\.minikube\certs\ca.pem --> C:\Users\Esteban\.minikube/ca.pem (1082 bytes)
I0920 05:02:02.349255   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\cert.pem -> C:\Users\Esteban\.minikube/cert.pem
I0920 05:02:02.349255   15200 exec_runner.go:144] found C:\Users\Esteban\.minikube/cert.pem, removing ...
I0920 05:02:02.349255   15200 exec_runner.go:207] rm: C:\Users\Esteban\.minikube\cert.pem
I0920 05:02:02.349255   15200 exec_runner.go:151] cp: C:\Users\Esteban\.minikube\certs\cert.pem --> C:\Users\Esteban\.minikube/cert.pem (1123 bytes)
I0920 05:02:02.350326   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\key.pem -> C:\Users\Esteban\.minikube/key.pem
I0920 05:02:02.350326   15200 exec_runner.go:144] found C:\Users\Esteban\.minikube/key.pem, removing ...
I0920 05:02:02.350326   15200 exec_runner.go:207] rm: C:\Users\Esteban\.minikube\key.pem
I0920 05:02:02.350326   15200 exec_runner.go:151] cp: C:\Users\Esteban\.minikube\certs\key.pem --> C:\Users\Esteban\.minikube/key.pem (1679 bytes)
I0920 05:02:02.351355   15200 provision.go:112] generating server cert: C:\Users\Esteban\.minikube\machines\server.pem ca-key=C:\Users\Esteban\.minikube\certs\ca.pem private-key=C:\Users\Esteban\.minikube\certs\ca-key.pem org=Esteban.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0920 05:02:02.456232   15200 provision.go:172] copyRemoteCerts
I0920 05:02:02.462190   15200 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0920 05:02:02.473190   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:02.617052   15200 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55551 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:02:02.661063   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\ca.pem -> /etc/docker/ca.pem
I0920 05:02:02.661063   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1082 bytes)
I0920 05:02:02.679163   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\machines\server.pem -> /etc/docker/server.pem
I0920 05:02:02.679163   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\machines\server.pem --> /etc/docker/server.pem (1204 bytes)
I0920 05:02:02.698372   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\machines\server-key.pem -> /etc/docker/server-key.pem
I0920 05:02:02.698372   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0920 05:02:02.717871   15200 provision.go:86] duration metric: configureAuth took 519.1144ms
I0920 05:02:02.720641   15200 ubuntu.go:193] setting minikube options for container-runtime
I0920 05:02:02.721168   15200 config.go:180] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.24.3
I0920 05:02:02.731739   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:02.899487   15200 main.go:134] libmachine: Using SSH client type: native
I0920 05:02:02.900037   15200 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55551 <nil> <nil>}
I0920 05:02:02.900037   15200 main.go:134] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0920 05:02:03.018140   15200 main.go:134] libmachine: SSH cmd err, output: <nil>: overlay

I0920 05:02:03.018646   15200 ubuntu.go:71] root file system type: overlay
I0920 05:02:03.018676   15200 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0920 05:02:03.028856   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:03.176773   15200 main.go:134] libmachine: Using SSH client type: native
I0920 05:02:03.177277   15200 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55551 <nil> <nil>}
I0920 05:02:03.177336   15200 main.go:134] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0920 05:02:03.258449   15200 main.go:134] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0920 05:02:03.269551   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:03.422233   15200 main.go:134] libmachine: Using SSH client type: native
I0920 05:02:03.422755   15200 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55551 <nil> <nil>}
I0920 05:02:03.422755   15200 main.go:134] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0920 05:02:04.076932   15200 main.go:134] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2022-06-06 23:01:03.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2022-09-20 10:02:03.248300000 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
 Wants=network-online.target
-Requires=docker.socket containerd.service
+Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutSec=0
-RestartSec=2
-Restart=always
-
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
+Restart=on-failure
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0920 05:02:04.076961   15200 machine.go:91] provisioned docker machine in 2.4368558s
I0920 05:02:04.076961   15200 client.go:171] LocalClient.Create took 45.0877578s
I0920 05:02:04.076961   15200 start.go:174] duration metric: libmachine.API.Create for "minikube" took 45.0877578s
I0920 05:02:04.076961   15200 start.go:307] post-start starting for "minikube" (driver="docker")
I0920 05:02:04.076961   15200 start.go:335] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0920 05:02:04.087232   15200 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0920 05:02:04.097956   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:04.242427   15200 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55551 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:02:04.302457   15200 ssh_runner.go:195] Run: cat /etc/os-release
I0920 05:02:04.306493   15200 command_runner.go:130] > NAME="Ubuntu"
I0920 05:02:04.306493   15200 command_runner.go:130] > VERSION="20.04.4 LTS (Focal Fossa)"
I0920 05:02:04.306493   15200 command_runner.go:130] > ID=ubuntu
I0920 05:02:04.306493   15200 command_runner.go:130] > ID_LIKE=debian
I0920 05:02:04.306493   15200 command_runner.go:130] > PRETTY_NAME="Ubuntu 20.04.4 LTS"
I0920 05:02:04.306493   15200 command_runner.go:130] > VERSION_ID="20.04"
I0920 05:02:04.306493   15200 command_runner.go:130] > HOME_URL="https://www.ubuntu.com/"
I0920 05:02:04.306493   15200 command_runner.go:130] > SUPPORT_URL="https://help.ubuntu.com/"
I0920 05:02:04.306493   15200 command_runner.go:130] > BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
I0920 05:02:04.306493   15200 command_runner.go:130] > PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
I0920 05:02:04.306493   15200 command_runner.go:130] > VERSION_CODENAME=focal
I0920 05:02:04.306493   15200 command_runner.go:130] > UBUNTU_CODENAME=focal
I0920 05:02:04.306493   15200 main.go:134] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0920 05:02:04.306493   15200 main.go:134] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0920 05:02:04.306493   15200 main.go:134] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0920 05:02:04.306493   15200 info.go:137] Remote host: Ubuntu 20.04.4 LTS
I0920 05:02:04.306493   15200 filesync.go:126] Scanning C:\Users\Esteban\.minikube\addons for local assets ...
I0920 05:02:04.307030   15200 filesync.go:126] Scanning C:\Users\Esteban\.minikube\files for local assets ...
I0920 05:02:04.307030   15200 start.go:310] post-start completed in 230.0686ms
I0920 05:02:04.318080   15200 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0920 05:02:04.457610   15200 profile.go:148] Saving config to C:\Users\Esteban\.minikube\profiles\minikube\config.json ...
I0920 05:02:04.477328   15200 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0920 05:02:04.487654   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:04.627578   15200 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55551 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:02:04.708773   15200 command_runner.go:130] > 2%
I0920 05:02:04.726604   15200 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0920 05:02:04.731417   15200 command_runner.go:130] > 234G
I0920 05:02:04.731954   15200 start.go:135] duration metric: createHost completed in 45.748017s
I0920 05:02:04.731954   15200 start.go:82] releasing machines lock for "minikube", held for 45.7485696s
I0920 05:02:04.742288   15200 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0920 05:02:04.908925   15200 ssh_runner.go:195] Run: curl -sS -m 2 https://k8s.gcr.io/
I0920 05:02:04.920084   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:04.923275   15200 ssh_runner.go:195] Run: systemctl --version
I0920 05:02:04.934018   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:05.088346   15200 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55551 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:02:05.118161   15200 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55551 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:02:06.072153   15200 command_runner.go:130] > <HTML><HEAD><meta http-equiv="content-type" content="text/html;charset=utf-8">
I0920 05:02:06.072153   15200 command_runner.go:130] > <TITLE>302 Moved</TITLE></HEAD><BODY>
I0920 05:02:06.072153   15200 command_runner.go:130] > <H1>302 Moved</H1>
I0920 05:02:06.072153   15200 command_runner.go:130] > The document has moved
I0920 05:02:06.072153   15200 command_runner.go:130] > <A HREF="https://cloud.google.com/container-registry/">here</A>.
I0920 05:02:06.072153   15200 command_runner.go:130] > </BODY></HTML>
I0920 05:02:06.072153   15200 ssh_runner.go:235] Completed: curl -sS -m 2 https://k8s.gcr.io/: (1.1632282s)
I0920 05:02:06.072153   15200 command_runner.go:130] > systemd 245 (245.4-4ubuntu3.17)
I0920 05:02:06.072153   15200 command_runner.go:130] > +PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid
I0920 05:02:06.072153   15200 ssh_runner.go:235] Completed: systemctl --version: (1.1488787s)
I0920 05:02:06.079302   15200 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0920 05:02:06.091440   15200 command_runner.go:130] > # /lib/systemd/system/docker.service
I0920 05:02:06.091440   15200 command_runner.go:130] > [Unit]
I0920 05:02:06.091440   15200 command_runner.go:130] > Description=Docker Application Container Engine
I0920 05:02:06.091440   15200 command_runner.go:130] > Documentation=https://docs.docker.com
I0920 05:02:06.091440   15200 command_runner.go:130] > BindsTo=containerd.service
I0920 05:02:06.091440   15200 command_runner.go:130] > After=network-online.target firewalld.service containerd.service
I0920 05:02:06.091440   15200 command_runner.go:130] > Wants=network-online.target
I0920 05:02:06.091440   15200 command_runner.go:130] > Requires=docker.socket
I0920 05:02:06.091440   15200 command_runner.go:130] > StartLimitBurst=3
I0920 05:02:06.091440   15200 command_runner.go:130] > StartLimitIntervalSec=60
I0920 05:02:06.091440   15200 command_runner.go:130] > [Service]
I0920 05:02:06.091440   15200 command_runner.go:130] > Type=notify
I0920 05:02:06.091440   15200 command_runner.go:130] > Restart=on-failure
I0920 05:02:06.091440   15200 command_runner.go:130] > # This file is a systemd drop-in unit that inherits from the base dockerd configuration.
I0920 05:02:06.091440   15200 command_runner.go:130] > # The base configuration already specifies an 'ExecStart=...' command. The first directive
I0920 05:02:06.091440   15200 command_runner.go:130] > # here is to clear out that command inherited from the base configuration. Without this,
I0920 05:02:06.091440   15200 command_runner.go:130] > # the command from the base configuration and the command specified here are treated as
I0920 05:02:06.091440   15200 command_runner.go:130] > # a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
I0920 05:02:06.091440   15200 command_runner.go:130] > # will catch this invalid input and refuse to start the service with an error like:
I0920 05:02:06.091440   15200 command_runner.go:130] > #  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
I0920 05:02:06.091440   15200 command_runner.go:130] > # NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
I0920 05:02:06.091440   15200 command_runner.go:130] > # container runtimes. If left unlimited, it may result in OOM issues with MySQL.
I0920 05:02:06.091440   15200 command_runner.go:130] > ExecStart=
I0920 05:02:06.091440   15200 command_runner.go:130] > ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
I0920 05:02:06.091440   15200 command_runner.go:130] > ExecReload=/bin/kill -s HUP $MAINPID
I0920 05:02:06.091440   15200 command_runner.go:130] > # Having non-zero Limit*s causes performance problems due to accounting overhead
I0920 05:02:06.091440   15200 command_runner.go:130] > # in the kernel. We recommend using cgroups to do container-local accounting.
I0920 05:02:06.091440   15200 command_runner.go:130] > LimitNOFILE=infinity
I0920 05:02:06.091440   15200 command_runner.go:130] > LimitNPROC=infinity
I0920 05:02:06.091440   15200 command_runner.go:130] > LimitCORE=infinity
I0920 05:02:06.091440   15200 command_runner.go:130] > # Uncomment TasksMax if your systemd version supports it.
I0920 05:02:06.091440   15200 command_runner.go:130] > # Only systemd 226 and above support this version.
I0920 05:02:06.091440   15200 command_runner.go:130] > TasksMax=infinity
I0920 05:02:06.091440   15200 command_runner.go:130] > TimeoutStartSec=0
I0920 05:02:06.091440   15200 command_runner.go:130] > # set delegate yes so that systemd does not reset the cgroups of docker containers
I0920 05:02:06.091440   15200 command_runner.go:130] > Delegate=yes
I0920 05:02:06.091440   15200 command_runner.go:130] > # kill only the docker process, not all processes in the cgroup
I0920 05:02:06.091440   15200 command_runner.go:130] > KillMode=process
I0920 05:02:06.091440   15200 command_runner.go:130] > [Install]
I0920 05:02:06.091440   15200 command_runner.go:130] > WantedBy=multi-user.target
I0920 05:02:06.092562   15200 cruntime.go:273] skipping containerd shutdown because we are bound to it
I0920 05:02:06.099597   15200 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0920 05:02:06.111244   15200 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
image-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0920 05:02:06.126298   15200 command_runner.go:130] > runtime-endpoint: unix:///var/run/cri-dockerd.sock
I0920 05:02:06.126298   15200 command_runner.go:130] > image-endpoint: unix:///var/run/cri-dockerd.sock
I0920 05:02:06.133072   15200 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0920 05:02:06.231895   15200 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0920 05:02:06.340404   15200 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0920 05:02:06.429769   15200 ssh_runner.go:195] Run: sudo systemctl restart docker
I0920 05:02:06.674249   15200 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0920 05:02:06.764232   15200 command_runner.go:130] ! Created symlink /etc/systemd/system/sockets.target.wants/cri-docker.socket → /lib/systemd/system/cri-docker.socket.
I0920 05:02:06.770710   15200 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0920 05:02:06.828646   15200 ssh_runner.go:195] Run: sudo systemctl start cri-docker.socket
I0920 05:02:06.841128   15200 start.go:450] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0920 05:02:06.859601   15200 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0920 05:02:06.864339   15200 command_runner.go:130] >   File: /var/run/cri-dockerd.sock
I0920 05:02:06.864339   15200 command_runner.go:130] >   Size: 0         	Blocks: 0          IO Block: 4096   socket
I0920 05:02:06.864339   15200 command_runner.go:130] > Device: 10001ah/1048602d	Inode: 170         Links: 1
I0920 05:02:06.864339   15200 command_runner.go:130] > Access: (0660/srw-rw----)  Uid: (    0/    root)   Gid: (  999/  docker)
I0920 05:02:06.864339   15200 command_runner.go:130] > Access: 2022-09-20 10:02:06.830108000 +0000
I0920 05:02:06.864339   15200 command_runner.go:130] > Modify: 2022-09-20 10:02:06.830108000 +0000
I0920 05:02:06.864339   15200 command_runner.go:130] > Change: 2022-09-20 10:02:06.830108000 +0000
I0920 05:02:06.864339   15200 command_runner.go:130] >  Birth: -
I0920 05:02:06.864339   15200 start.go:471] Will wait 60s for crictl version
I0920 05:02:06.870817   15200 ssh_runner.go:195] Run: sudo crictl version
I0920 05:02:06.954403   15200 command_runner.go:130] > Version:  0.1.0
I0920 05:02:06.954403   15200 command_runner.go:130] > RuntimeName:  docker
I0920 05:02:06.954403   15200 command_runner.go:130] > RuntimeVersion:  20.10.17
I0920 05:02:06.954403   15200 command_runner.go:130] > RuntimeApiVersion:  1.41.0
I0920 05:02:06.954403   15200 start.go:480] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  20.10.17
RuntimeApiVersion:  1.41.0
I0920 05:02:06.965009   15200 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0920 05:02:06.996891   15200 command_runner.go:130] > 20.10.17
I0920 05:02:07.007276   15200 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0920 05:02:07.037552   15200 command_runner.go:130] > 20.10.17
I0920 05:02:07.040750   15200 out.go:204] 🐳  Preparing Kubernetes v1.24.3 on Docker 20.10.17 ...
I0920 05:02:07.052495   15200 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0920 05:02:07.271671   15200 network.go:96] got host ip for mount in container by digging dns: 192.168.65.2
I0920 05:02:07.288895   15200 ssh_runner.go:195] Run: grep 192.168.65.2	host.minikube.internal$ /etc/hosts
I0920 05:02:07.293293   15200 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.2	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0920 05:02:07.314280   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0920 05:02:07.456748   15200 preload.go:132] Checking if preload exists for k8s version v1.24.3 and runtime docker
I0920 05:02:07.467147   15200 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0920 05:02:07.493149   15200 command_runner.go:130] > k8s.gcr.io/kube-apiserver:v1.24.3
I0920 05:02:07.493149   15200 command_runner.go:130] > k8s.gcr.io/kube-proxy:v1.24.3
I0920 05:02:07.493149   15200 command_runner.go:130] > k8s.gcr.io/kube-scheduler:v1.24.3
I0920 05:02:07.493149   15200 command_runner.go:130] > k8s.gcr.io/kube-controller-manager:v1.24.3
I0920 05:02:07.493149   15200 command_runner.go:130] > k8s.gcr.io/etcd:3.5.3-0
I0920 05:02:07.493149   15200 command_runner.go:130] > k8s.gcr.io/pause:3.7
I0920 05:02:07.493149   15200 command_runner.go:130] > k8s.gcr.io/coredns/coredns:v1.8.6
I0920 05:02:07.493149   15200 command_runner.go:130] > gcr.io/k8s-minikube/storage-provisioner:v5
I0920 05:02:07.493149   15200 docker.go:611] Got preloaded images: -- stdout --
k8s.gcr.io/kube-apiserver:v1.24.3
k8s.gcr.io/kube-proxy:v1.24.3
k8s.gcr.io/kube-scheduler:v1.24.3
k8s.gcr.io/kube-controller-manager:v1.24.3
k8s.gcr.io/etcd:3.5.3-0
k8s.gcr.io/pause:3.7
k8s.gcr.io/coredns/coredns:v1.8.6
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0920 05:02:07.493149   15200 docker.go:542] Images already preloaded, skipping extraction
I0920 05:02:07.504260   15200 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0920 05:02:07.530316   15200 command_runner.go:130] > k8s.gcr.io/kube-apiserver:v1.24.3
I0920 05:02:07.530316   15200 command_runner.go:130] > k8s.gcr.io/kube-proxy:v1.24.3
I0920 05:02:07.530316   15200 command_runner.go:130] > k8s.gcr.io/kube-scheduler:v1.24.3
I0920 05:02:07.530316   15200 command_runner.go:130] > k8s.gcr.io/kube-controller-manager:v1.24.3
I0920 05:02:07.530316   15200 command_runner.go:130] > k8s.gcr.io/etcd:3.5.3-0
I0920 05:02:07.530316   15200 command_runner.go:130] > k8s.gcr.io/pause:3.7
I0920 05:02:07.530316   15200 command_runner.go:130] > k8s.gcr.io/coredns/coredns:v1.8.6
I0920 05:02:07.530316   15200 command_runner.go:130] > gcr.io/k8s-minikube/storage-provisioner:v5
I0920 05:02:07.531380   15200 docker.go:611] Got preloaded images: -- stdout --
k8s.gcr.io/kube-apiserver:v1.24.3
k8s.gcr.io/kube-proxy:v1.24.3
k8s.gcr.io/kube-scheduler:v1.24.3
k8s.gcr.io/kube-controller-manager:v1.24.3
k8s.gcr.io/etcd:3.5.3-0
k8s.gcr.io/pause:3.7
k8s.gcr.io/coredns/coredns:v1.8.6
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0920 05:02:07.531380   15200 cache_images.go:84] Images are preloaded, skipping loading
I0920 05:02:07.542882   15200 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0920 05:02:07.607790   15200 command_runner.go:130] > cgroupfs
I0920 05:02:07.607790   15200 cni.go:95] Creating CNI manager for ""
I0920 05:02:07.607790   15200 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0920 05:02:07.608294   15200 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0920 05:02:07.608314   15200 kubeadm.go:158] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.24.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NoTaintMaster:true NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[]}
I0920 05:02:07.608314   15200 kubeadm.go:162] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.24.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0920 05:02:07.608314   15200 kubeadm.go:961] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.24.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime=remote --container-runtime-endpoint=/var/run/cri-dockerd.sock --hostname-override=minikube --image-service-endpoint=/var/run/cri-dockerd.sock --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2 --runtime-request-timeout=15m

[Install]
 config:
{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0920 05:02:07.614984   15200 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.24.3
I0920 05:02:07.623200   15200 command_runner.go:130] > kubeadm
I0920 05:02:07.623200   15200 command_runner.go:130] > kubectl
I0920 05:02:07.623200   15200 command_runner.go:130] > kubelet
I0920 05:02:07.623200   15200 binaries.go:44] Found k8s binaries, skipping transfer
I0920 05:02:07.629481   15200 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0920 05:02:07.638268   15200 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (470 bytes)
I0920 05:02:07.651807   15200 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0920 05:02:07.665602   15200 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2031 bytes)
I0920 05:02:07.696341   15200 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0920 05:02:07.700655   15200 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0920 05:02:07.710495   15200 certs.go:54] Setting up C:\Users\Esteban\.minikube\profiles\minikube for IP: 192.168.49.2
I0920 05:02:07.711019   15200 certs.go:182] skipping minikubeCA CA generation: C:\Users\Esteban\.minikube\ca.key
I0920 05:02:07.711019   15200 certs.go:182] skipping proxyClientCA CA generation: C:\Users\Esteban\.minikube\proxy-client-ca.key
I0920 05:02:07.711542   15200 certs.go:302] generating minikube-user signed cert: C:\Users\Esteban\.minikube\profiles\minikube\client.key
I0920 05:02:07.711542   15200 crypto.go:68] Generating cert C:\Users\Esteban\.minikube\profiles\minikube\client.crt with IP's: []
I0920 05:02:07.846912   15200 crypto.go:156] Writing cert to C:\Users\Esteban\.minikube\profiles\minikube\client.crt ...
I0920 05:02:07.846912   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\client.crt: {Name:mkeb516ac61b6281ea785e28af2ac8a5a8ed3d98 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:07.847912   15200 crypto.go:164] Writing key to C:\Users\Esteban\.minikube\profiles\minikube\client.key ...
I0920 05:02:07.847912   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\client.key: {Name:mkcd9ffc8b0fe78d562825c8c08bfaa3e8e906e2 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:07.847912   15200 certs.go:302] generating minikube signed cert: C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2
I0920 05:02:07.848880   15200 crypto.go:68] Generating cert C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0920 05:02:07.933359   15200 crypto.go:156] Writing cert to C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 ...
I0920 05:02:07.933359   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2: {Name:mk955cc16007eb4127e73f3001c31676541b7e16 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:07.933359   15200 crypto.go:164] Writing key to C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 ...
I0920 05:02:07.933359   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2: {Name:mkab9f8727af11a00b584272e660bc8301e36411 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:07.934359   15200 certs.go:320] copying C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 -> C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt
I0920 05:02:07.939358   15200 certs.go:324] copying C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 -> C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key
I0920 05:02:07.939358   15200 certs.go:302] generating aggregator signed cert: C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key
I0920 05:02:07.939358   15200 crypto.go:68] Generating cert C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt with IP's: []
I0920 05:02:08.153528   15200 crypto.go:156] Writing cert to C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt ...
I0920 05:02:08.153528   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt: {Name:mk3a9d72c7e119b06db26901de5540eb12d6af31 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:08.155529   15200 crypto.go:164] Writing key to C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key ...
I0920 05:02:08.155529   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key: {Name:mkcd342358400afe54770e5084d88814f41d4f90 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:08.155529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt -> /var/lib/minikube/certs/apiserver.crt
I0920 05:02:08.155529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key -> /var/lib/minikube/certs/apiserver.key
I0920 05:02:08.155529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt -> /var/lib/minikube/certs/proxy-client.crt
I0920 05:02:08.158529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key -> /var/lib/minikube/certs/proxy-client.key
I0920 05:02:08.158529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\ca.crt -> /var/lib/minikube/certs/ca.crt
I0920 05:02:08.158529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\ca.key -> /var/lib/minikube/certs/ca.key
I0920 05:02:08.159529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\proxy-client-ca.crt -> /var/lib/minikube/certs/proxy-client-ca.crt
I0920 05:02:08.159529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\proxy-client-ca.key -> /var/lib/minikube/certs/proxy-client-ca.key
I0920 05:02:08.159529   15200 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\ca-key.pem (1675 bytes)
I0920 05:02:08.159529   15200 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\ca.pem (1082 bytes)
I0920 05:02:08.159529   15200 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\cert.pem (1123 bytes)
I0920 05:02:08.159529   15200 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\key.pem (1679 bytes)
I0920 05:02:08.159529   15200 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\ca.crt -> /usr/share/ca-certificates/minikubeCA.pem
I0920 05:02:08.160529   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0920 05:02:08.181515   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0920 05:02:08.199820   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0920 05:02:08.218283   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0920 05:02:08.236161   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0920 05:02:08.256126   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0920 05:02:08.275710   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0920 05:02:08.294505   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0920 05:02:08.313443   15200 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0920 05:02:08.333387   15200 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0920 05:02:08.354093   15200 ssh_runner.go:195] Run: openssl version
I0920 05:02:08.360229   15200 command_runner.go:130] > OpenSSL 1.1.1f  31 Mar 2020
I0920 05:02:08.367593   15200 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0920 05:02:08.380751   15200 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0920 05:02:08.384443   15200 command_runner.go:130] > -rw-r--r-- 1 root root 1111 Sep 20 09:09 /usr/share/ca-certificates/minikubeCA.pem
I0920 05:02:08.384443   15200 certs.go:431] hashing: -rw-r--r-- 1 root root 1111 Sep 20 09:09 /usr/share/ca-certificates/minikubeCA.pem
I0920 05:02:08.391267   15200 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0920 05:02:08.397166   15200 command_runner.go:130] > b5213941
I0920 05:02:08.404055   15200 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0920 05:02:08.413060   15200 kubeadm.go:395] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0920 05:02:08.424009   15200 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0920 05:02:08.456742   15200 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0920 05:02:08.464566   15200 command_runner.go:130] ! ls: cannot access '/var/lib/kubelet/kubeadm-flags.env': No such file or directory
I0920 05:02:08.464566   15200 command_runner.go:130] ! ls: cannot access '/var/lib/kubelet/config.yaml': No such file or directory
I0920 05:02:08.464566   15200 command_runner.go:130] ! ls: cannot access '/var/lib/minikube/etcd': No such file or directory
I0920 05:02:08.471462   15200 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0920 05:02:08.479875   15200 kubeadm.go:221] ignoring SystemVerification for kubeadm because of docker driver
I0920 05:02:08.486702   15200 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0920 05:02:08.493488   15200 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
I0920 05:02:08.493488   15200 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
I0920 05:02:08.493488   15200 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
I0920 05:02:08.493488   15200 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0920 05:02:08.494525   15200 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0920 05:02:08.494525   15200 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.24.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0920 05:02:08.527125   15200 command_runner.go:130] ! W0920 10:02:08.525869    1184 initconfiguration.go:120] Usage of CRI endpoints without URL scheme is deprecated and can cause kubelet errors in the future. Automatically prepending scheme "unix" to the "criSocket" with value "/var/run/cri-dockerd.sock". Please update your configuration!
I0920 05:02:08.564699   15200 command_runner.go:130] ! 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0920 05:02:08.638406   15200 command_runner.go:130] ! 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0920 05:02:25.940308   15200 command_runner.go:130] > [init] Using Kubernetes version: v1.24.3
I0920 05:02:25.940308   15200 command_runner.go:130] > [preflight] Running pre-flight checks
I0920 05:02:25.940308   15200 command_runner.go:130] > [preflight] Pulling images required for setting up a Kubernetes cluster
I0920 05:02:25.940308   15200 command_runner.go:130] > [preflight] This might take a minute or two, depending on the speed of your internet connection
I0920 05:02:25.940817   15200 command_runner.go:130] > [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0920 05:02:25.942472   15200 out.go:204]     ▪ Generating certificates and keys ...
I0920 05:02:25.940845   15200 command_runner.go:130] > [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0920 05:02:25.943020   15200 command_runner.go:130] > [certs] Using existing ca certificate authority
I0920 05:02:25.943020   15200 command_runner.go:130] > [certs] Using existing apiserver certificate and key on disk
I0920 05:02:25.943020   15200 command_runner.go:130] > [certs] Generating "apiserver-kubelet-client" certificate and key
I0920 05:02:25.943020   15200 command_runner.go:130] > [certs] Generating "front-proxy-ca" certificate and key
I0920 05:02:25.943568   15200 command_runner.go:130] > [certs] Generating "front-proxy-client" certificate and key
I0920 05:02:25.943568   15200 command_runner.go:130] > [certs] Generating "etcd/ca" certificate and key
I0920 05:02:25.943568   15200 command_runner.go:130] > [certs] Generating "etcd/server" certificate and key
I0920 05:02:25.943568   15200 command_runner.go:130] > [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0920 05:02:25.944201   15200 command_runner.go:130] > [certs] Generating "etcd/peer" certificate and key
I0920 05:02:25.944201   15200 command_runner.go:130] > [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0920 05:02:25.944201   15200 command_runner.go:130] > [certs] Generating "etcd/healthcheck-client" certificate and key
I0920 05:02:25.944201   15200 command_runner.go:130] > [certs] Generating "apiserver-etcd-client" certificate and key
I0920 05:02:25.944738   15200 command_runner.go:130] > [certs] Generating "sa" key and public key
I0920 05:02:25.944738   15200 command_runner.go:130] > [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0920 05:02:25.944738   15200 command_runner.go:130] > [kubeconfig] Writing "admin.conf" kubeconfig file
I0920 05:02:25.944738   15200 command_runner.go:130] > [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0920 05:02:25.944738   15200 command_runner.go:130] > [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0920 05:02:25.945280   15200 command_runner.go:130] > [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0920 05:02:25.945280   15200 command_runner.go:130] > [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0920 05:02:25.945280   15200 command_runner.go:130] > [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0920 05:02:25.945280   15200 command_runner.go:130] > [kubelet-start] Starting the kubelet
I0920 05:02:25.947950   15200 out.go:204]     ▪ Booting up control plane ...
I0920 05:02:25.945807   15200 command_runner.go:130] > [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0920 05:02:25.948459   15200 command_runner.go:130] > [control-plane] Creating static Pod manifest for "kube-apiserver"
I0920 05:02:25.948512   15200 command_runner.go:130] > [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0920 05:02:25.948512   15200 command_runner.go:130] > [control-plane] Creating static Pod manifest for "kube-scheduler"
I0920 05:02:25.948512   15200 command_runner.go:130] > [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0920 05:02:25.949052   15200 command_runner.go:130] > [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0920 05:02:25.949052   15200 command_runner.go:130] > [apiclient] All control plane components are healthy after 13.501919 seconds
I0920 05:02:25.949556   15200 command_runner.go:130] > [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0920 05:02:25.949593   15200 command_runner.go:130] > [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0920 05:02:25.949593   15200 command_runner.go:130] > [upload-certs] Skipping phase. Please see --upload-certs
I0920 05:02:25.950113   15200 command_runner.go:130] > [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0920 05:02:25.950113   15200 command_runner.go:130] > [bootstrap-token] Using token: 75uwqc.xttnqbfq1uycnzlu
I0920 05:02:25.952458   15200 out.go:204]     ▪ Configuring RBAC rules ...
I0920 05:02:25.952458   15200 command_runner.go:130] > [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0920 05:02:25.952976   15200 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0920 05:02:25.952976   15200 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0920 05:02:25.952976   15200 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0920 05:02:25.953511   15200 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0920 05:02:25.953511   15200 command_runner.go:130] > [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0920 05:02:25.954043   15200 command_runner.go:130] > [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0920 05:02:25.954043   15200 command_runner.go:130] > [addons] Applied essential addon: CoreDNS
I0920 05:02:25.954043   15200 command_runner.go:130] > [addons] Applied essential addon: kube-proxy
I0920 05:02:25.954043   15200 command_runner.go:130] > Your Kubernetes control-plane has initialized successfully!
I0920 05:02:25.954043   15200 command_runner.go:130] > To start using your cluster, you need to run the following as a regular user:
I0920 05:02:25.954569   15200 command_runner.go:130] >   mkdir -p $HOME/.kube
I0920 05:02:25.954569   15200 command_runner.go:130] >   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0920 05:02:25.954569   15200 command_runner.go:130] >   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0920 05:02:25.954569   15200 command_runner.go:130] > Alternatively, if you are the root user, you can run:
I0920 05:02:25.954569   15200 command_runner.go:130] >   export KUBECONFIG=/etc/kubernetes/admin.conf
I0920 05:02:25.955134   15200 command_runner.go:130] > You should now deploy a pod network to the cluster.
I0920 05:02:25.955134   15200 command_runner.go:130] > Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0920 05:02:25.955134   15200 command_runner.go:130] >   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0920 05:02:25.955134   15200 command_runner.go:130] > You can now join any number of control-plane nodes by copying certificate authorities
I0920 05:02:25.955663   15200 command_runner.go:130] > and service account keys on each node and then running the following as root:
I0920 05:02:25.955663   15200 command_runner.go:130] >   kubeadm join control-plane.minikube.internal:8443 --token 75uwqc.xttnqbfq1uycnzlu \
I0920 05:02:25.955663   15200 command_runner.go:130] > 	--discovery-token-ca-cert-hash sha256:73202b2265c3b3018d12119f3c78685654b918967fd5f268db3bf3b4d7e92013 \
I0920 05:02:25.955663   15200 command_runner.go:130] > 	--control-plane 
I0920 05:02:25.955663   15200 command_runner.go:130] > Then you can join any number of worker nodes by running the following on each as root:
I0920 05:02:25.955663   15200 command_runner.go:130] > kubeadm join control-plane.minikube.internal:8443 --token 75uwqc.xttnqbfq1uycnzlu \
I0920 05:02:25.956195   15200 command_runner.go:130] > 	--discovery-token-ca-cert-hash sha256:73202b2265c3b3018d12119f3c78685654b918967fd5f268db3bf3b4d7e92013 
I0920 05:02:25.956195   15200 cni.go:95] Creating CNI manager for ""
I0920 05:02:25.956195   15200 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0920 05:02:25.956195   15200 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0920 05:02:25.965049   15200 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.24.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0920 05:02:25.965599   15200 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.24.3/kubectl label nodes minikube.k8s.io/version=v1.26.1 minikube.k8s.io/commit=62e108c3dfdec8029a890ad6d8ef96b6461426dc minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2022_09_20T05_02_25_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0920 05:02:26.039167   15200 command_runner.go:130] > -16
I0920 05:02:26.039691   15200 ops.go:34] apiserver oom_adj: -16
I0920 05:02:26.249942   15200 command_runner.go:130] > clusterrolebinding.rbac.authorization.k8s.io/minikube-rbac created
I0920 05:02:26.723508   15200 command_runner.go:130] > node/minikube labeled
I0920 05:02:26.723508   15200 kubeadm.go:1045] duration metric: took 767.3132ms to wait for elevateKubeSystemPrivileges.
I0920 05:02:26.723508   15200 kubeadm.go:397] StartCluster complete in 18.3104478s
I0920 05:02:26.723508   15200 settings.go:142] acquiring lock: {Name:mkde5d9e1a0e909149121562a1b3a53757a9972f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:26.723508   15200 settings.go:150] Updating kubeconfig:  C:\Users\Esteban\.kube\config
I0920 05:02:26.724564   15200 lock.go:35] WriteFile acquiring C:\Users\Esteban\.kube\config: {Name:mk4c8b40f2da3a85ca70096479e8c468d096d99f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:02:26.729383   15200 loader.go:372] Config loaded from file:  C:\Users\Esteban\.kube\config
I0920 05:02:26.729910   15200 kapi.go:59] client config for minikube: &rest.Config{Host:"https://127.0.0.1:55550", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", UID:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.crt", KeyFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.key", CAFile:"C:\\Users\\Esteban\\.minikube\\ca.crt", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1803b20), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}
I0920 05:02:26.730441   15200 cert_rotation.go:137] Starting client certificate rotation controller
I0920 05:02:26.730965   15200 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55550/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale'
I0920 05:02:26.732815   15200 round_trippers.go:510] HTTP Trace: Dial to tcp:127.0.0.1:55550 succeed
I0920 05:02:26.742050   15200 round_trippers.go:553] GET https://127.0.0.1:55550/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale 200 OK in 11 milliseconds
I0920 05:02:26.742050   15200 round_trippers.go:570] HTTP Statistics: DNSLookup 0 ms Dial 1 ms TLSHandshake 5 ms ServerProcessing 3 ms Duration 11 ms
I0920 05:02:26.742050   15200 round_trippers.go:577] Response Headers:
I0920 05:02:26.742050   15200 round_trippers.go:580]     Content-Length: 291
I0920 05:02:26.742050   15200 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:02:26 GMT
I0920 05:02:26.742050   15200 round_trippers.go:580]     Audit-Id: 2a37dada-fa66-4a04-81d9-0087a8db11b8
I0920 05:02:26.742050   15200 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:02:26.742050   15200 round_trippers.go:580]     Content-Type: application/json
I0920 05:02:26.742050   15200 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 3a08d23e-57af-4017-b3c5-7760df44978a
I0920 05:02:26.742050   15200 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 18dad75e-6c87-48ea-af75-5feae41aa6b3
I0920 05:02:26.742050   15200 request.go:1073] Response Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"a6347885-2a03-4c42-9462-91cb395359a3","resourceVersion":"238","creationTimestamp":"2022-09-20T10:02:25Z"},"spec":{"replicas":2},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:02:26.742050   15200 request.go:1073] Request Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"a6347885-2a03-4c42-9462-91cb395359a3","resourceVersion":"238","creationTimestamp":"2022-09-20T10:02:25Z"},"spec":{"replicas":1},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:02:26.742558   15200 round_trippers.go:466] curl -v -XPUT  -H "Content-Type: application/json" -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55550/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale'
I0920 05:02:26.746931   15200 round_trippers.go:553] PUT https://127.0.0.1:55550/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale 200 OK in 4 milliseconds
I0920 05:02:26.746931   15200 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 4 ms Duration 4 ms
I0920 05:02:26.746931   15200 round_trippers.go:577] Response Headers:
I0920 05:02:26.746931   15200 round_trippers.go:580]     Audit-Id: 56c85347-56e1-441a-8bc1-9a426f4018e4
I0920 05:02:26.746931   15200 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:02:26.746931   15200 round_trippers.go:580]     Content-Type: application/json
I0920 05:02:26.746931   15200 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 3a08d23e-57af-4017-b3c5-7760df44978a
I0920 05:02:26.746931   15200 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 18dad75e-6c87-48ea-af75-5feae41aa6b3
I0920 05:02:26.746931   15200 round_trippers.go:580]     Content-Length: 291
I0920 05:02:26.746931   15200 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:02:26 GMT
I0920 05:02:26.746931   15200 request.go:1073] Response Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"a6347885-2a03-4c42-9462-91cb395359a3","resourceVersion":"262","creationTimestamp":"2022-09-20T10:02:25Z"},"spec":{"replicas":1},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:02:27.247080   15200 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55550/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale'
I0920 05:02:27.249780   15200 round_trippers.go:553] GET https://127.0.0.1:55550/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale 200 OK in 2 milliseconds
I0920 05:02:27.249780   15200 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 2 ms Duration 2 ms
I0920 05:02:27.249780   15200 round_trippers.go:577] Response Headers:
I0920 05:02:27.249780   15200 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 3a08d23e-57af-4017-b3c5-7760df44978a
I0920 05:02:27.249780   15200 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 18dad75e-6c87-48ea-af75-5feae41aa6b3
I0920 05:02:27.249780   15200 round_trippers.go:580]     Content-Length: 291
I0920 05:02:27.249780   15200 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:02:27 GMT
I0920 05:02:27.249780   15200 round_trippers.go:580]     Audit-Id: 78243045-872e-42bd-bebe-84eca9b590b2
I0920 05:02:27.249780   15200 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:02:27.249780   15200 round_trippers.go:580]     Content-Type: application/json
I0920 05:02:27.249780   15200 request.go:1073] Response Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"a6347885-2a03-4c42-9462-91cb395359a3","resourceVersion":"262","creationTimestamp":"2022-09-20T10:02:25Z"},"spec":{"replicas":1},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:02:27.249780   15200 kapi.go:244] deployment "coredns" in namespace "kube-system" and context "minikube" rescaled to 1
I0920 05:02:27.249780   15200 start.go:211] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0920 05:02:27.250287   15200 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0920 05:02:27.251950   15200 out.go:177] 🔎  Verifying Kubernetes components...
I0920 05:02:27.250322   15200 addons.go:412] enableAddons start: toEnable=map[], additional=[]
I0920 05:02:27.250322   15200 config.go:180] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.24.3
I0920 05:02:27.252458   15200 addons.go:65] Setting default-storageclass=true in profile "minikube"
I0920 05:02:27.252458   15200 addons.go:65] Setting storage-provisioner=true in profile "minikube"
I0920 05:02:27.252491   15200 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0920 05:02:27.252491   15200 addons.go:153] Setting addon storage-provisioner=true in "minikube"
W0920 05:02:27.252491   15200 addons.go:162] addon storage-provisioner should already be in state true
I0920 05:02:27.252491   15200 host.go:66] Checking if "minikube" exists ...
I0920 05:02:27.264989   15200 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0920 05:02:27.286388   15200 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:02:27.288101   15200 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:02:27.316932   15200 command_runner.go:130] > apiVersion: v1
I0920 05:02:27.316932   15200 command_runner.go:130] > data:
I0920 05:02:27.316932   15200 command_runner.go:130] >   Corefile: |
I0920 05:02:27.316932   15200 command_runner.go:130] >     .:53 {
I0920 05:02:27.316932   15200 command_runner.go:130] >         errors
I0920 05:02:27.316932   15200 command_runner.go:130] >         health {
I0920 05:02:27.316932   15200 command_runner.go:130] >            lameduck 5s
I0920 05:02:27.316932   15200 command_runner.go:130] >         }
I0920 05:02:27.316932   15200 command_runner.go:130] >         ready
I0920 05:02:27.316932   15200 command_runner.go:130] >         kubernetes cluster.local in-addr.arpa ip6.arpa {
I0920 05:02:27.316932   15200 command_runner.go:130] >            pods insecure
I0920 05:02:27.316932   15200 command_runner.go:130] >            fallthrough in-addr.arpa ip6.arpa
I0920 05:02:27.316932   15200 command_runner.go:130] >            ttl 30
I0920 05:02:27.316932   15200 command_runner.go:130] >         }
I0920 05:02:27.316932   15200 command_runner.go:130] >         prometheus :9153
I0920 05:02:27.316932   15200 command_runner.go:130] >         forward . /etc/resolv.conf {
I0920 05:02:27.316932   15200 command_runner.go:130] >            max_concurrent 1000
I0920 05:02:27.316932   15200 command_runner.go:130] >         }
I0920 05:02:27.316932   15200 command_runner.go:130] >         cache 30
I0920 05:02:27.316932   15200 command_runner.go:130] >         loop
I0920 05:02:27.316932   15200 command_runner.go:130] >         reload
I0920 05:02:27.316932   15200 command_runner.go:130] >         loadbalance
I0920 05:02:27.316932   15200 command_runner.go:130] >     }
I0920 05:02:27.316932   15200 command_runner.go:130] > kind: ConfigMap
I0920 05:02:27.316932   15200 command_runner.go:130] > metadata:
I0920 05:02:27.316932   15200 command_runner.go:130] >   creationTimestamp: "2022-09-20T10:02:25Z"
I0920 05:02:27.316932   15200 command_runner.go:130] >   name: coredns
I0920 05:02:27.316932   15200 command_runner.go:130] >   namespace: kube-system
I0920 05:02:27.316932   15200 command_runner.go:130] >   resourceVersion: "234"
I0920 05:02:27.316932   15200 command_runner.go:130] >   uid: 70c11d27-28e8-46a7-86c8-93cb2f869e11
I0920 05:02:27.317464   15200 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.2 host.minikube.internal\n           fallthrough\n        }' | sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0920 05:02:27.332805   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0920 05:02:27.497515   15200 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0920 05:02:27.499512   15200 addons.go:345] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0920 05:02:27.499512   15200 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0920 05:02:27.510511   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:27.512511   15200 loader.go:372] Config loaded from file:  C:\Users\Esteban\.kube\config
I0920 05:02:27.513512   15200 kapi.go:59] client config for minikube: &rest.Config{Host:"https://127.0.0.1:55550", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", UID:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.crt", KeyFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.key", CAFile:"C:\\Users\\Esteban\\.minikube\\ca.crt", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1803b20), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}
I0920 05:02:27.513512   15200 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55550/apis/storage.k8s.io/v1/storageclasses'
I0920 05:02:27.516512   15200 round_trippers.go:553] GET https://127.0.0.1:55550/apis/storage.k8s.io/v1/storageclasses 200 OK in 3 milliseconds
I0920 05:02:27.516512   15200 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 3 ms Duration 3 ms
I0920 05:02:27.516512   15200 round_trippers.go:577] Response Headers:
I0920 05:02:27.516512   15200 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 18dad75e-6c87-48ea-af75-5feae41aa6b3
I0920 05:02:27.516512   15200 round_trippers.go:580]     Content-Length: 109
I0920 05:02:27.516512   15200 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:02:27 GMT
I0920 05:02:27.516512   15200 round_trippers.go:580]     Audit-Id: 671ca30a-523c-487f-a344-8c3c4b4da1fa
I0920 05:02:27.516512   15200 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:02:27.516512   15200 round_trippers.go:580]     Content-Type: application/json
I0920 05:02:27.516512   15200 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 3a08d23e-57af-4017-b3c5-7760df44978a
I0920 05:02:27.516512   15200 request.go:1073] Response Body: {"kind":"StorageClassList","apiVersion":"storage.k8s.io/v1","metadata":{"resourceVersion":"262"},"items":[]}
I0920 05:02:27.517512   15200 addons.go:153] Setting addon default-storageclass=true in "minikube"
W0920 05:02:27.517512   15200 addons.go:162] addon default-storageclass should already be in state true
I0920 05:02:27.517512   15200 host.go:66] Checking if "minikube" exists ...
I0920 05:02:27.528511   15200 loader.go:372] Config loaded from file:  C:\Users\Esteban\.kube\config
I0920 05:02:27.529513   15200 kapi.go:59] client config for minikube: &rest.Config{Host:"https://127.0.0.1:55550", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", UID:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.crt", KeyFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.key", CAFile:"C:\\Users\\Esteban\\.minikube\\ca.crt", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1803b20), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}
I0920 05:02:27.529513   15200 api_server.go:51] waiting for apiserver process to appear ...
I0920 05:02:27.538511   15200 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0920 05:02:27.542513   15200 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:02:27.670878   15200 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55551 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:02:27.718877   15200 addons.go:345] installing /etc/kubernetes/addons/storageclass.yaml
I0920 05:02:27.720878   15200 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0920 05:02:27.731878   15200 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:02:27.777881   15200 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.24.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0920 05:02:27.893125   15200 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55551 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:02:28.052079   15200 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.24.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0920 05:02:29.173352   15200 command_runner.go:130] > configmap/coredns replaced
I0920 05:02:29.173352   15200 ssh_runner.go:235] Completed: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.2 host.minikube.internal\n           fallthrough\n        }' | sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -": (1.8558887s)
I0920 05:02:29.173352   15200 start.go:809] {"host.minikube.internal": 192.168.65.2} host record injected into CoreDNS
I0920 05:02:29.173352   15200 command_runner.go:130] > 1824
I0920 05:02:29.173352   15200 ssh_runner.go:235] Completed: sudo pgrep -xnf kube-apiserver.*minikube.*: (1.6348409s)
I0920 05:02:29.173352   15200 api_server.go:71] duration metric: took 1.9230654s to wait for apiserver process to appear ...
I0920 05:02:29.173352   15200 api_server.go:87] waiting for apiserver healthz status ...
I0920 05:02:29.173352   15200 api_server.go:240] Checking apiserver healthz at https://127.0.0.1:55550/healthz ...
I0920 05:02:29.173352   15200 command_runner.go:130] > serviceaccount/storage-provisioner created
I0920 05:02:29.173352   15200 command_runner.go:130] > clusterrolebinding.rbac.authorization.k8s.io/storage-provisioner created
I0920 05:02:29.181353   15200 command_runner.go:130] > role.rbac.authorization.k8s.io/system:persistent-volume-provisioner created
I0920 05:02:29.182354   15200 api_server.go:266] https://127.0.0.1:55550/healthz returned 200:
ok
I0920 05:02:29.182354   15200 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55550/version'
I0920 05:02:29.183350   15200 round_trippers.go:553] GET https://127.0.0.1:55550/version 200 OK in 0 milliseconds
I0920 05:02:29.183350   15200 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 0 ms Duration 0 ms
I0920 05:02:29.183350   15200 round_trippers.go:577] Response Headers:
I0920 05:02:29.183350   15200 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:02:29.183350   15200 round_trippers.go:580]     Content-Type: application/json
I0920 05:02:29.183350   15200 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 3a08d23e-57af-4017-b3c5-7760df44978a
I0920 05:02:29.183350   15200 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 18dad75e-6c87-48ea-af75-5feae41aa6b3
I0920 05:02:29.183350   15200 round_trippers.go:580]     Content-Length: 263
I0920 05:02:29.183350   15200 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:02:29 GMT
I0920 05:02:29.183350   15200 round_trippers.go:580]     Audit-Id: d3d62af0-3e12-4df9-86e4-91e97e03f5f9
I0920 05:02:29.183350   15200 request.go:1073] Response Body: {
  "major": "1",
  "minor": "24",
  "gitVersion": "v1.24.3",
  "gitCommit": "aef86a93758dc3cb2c658dd9657ab4ad4afc21cb",
  "gitTreeState": "clean",
  "buildDate": "2022-07-13T14:23:26Z",
  "goVersion": "go1.18.3",
  "compiler": "gc",
  "platform": "linux/amd64"
}
I0920 05:02:29.183350   15200 api_server.go:140] control plane version: v1.24.3
I0920 05:02:29.183350   15200 api_server.go:130] duration metric: took 9.9972ms to wait for apiserver health ...
I0920 05:02:29.183350   15200 system_pods.go:43] waiting for kube-system pods to appear ...
I0920 05:02:29.183350   15200 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55550/api/v1/namespaces/kube-system/pods'
I0920 05:02:29.187701   15200 round_trippers.go:553] GET https://127.0.0.1:55550/api/v1/namespaces/kube-system/pods 200 OK in 4 milliseconds
I0920 05:02:29.187701   15200 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 4 ms Duration 4 ms
I0920 05:02:29.187701   15200 round_trippers.go:577] Response Headers:
I0920 05:02:29.187701   15200 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 18dad75e-6c87-48ea-af75-5feae41aa6b3
I0920 05:02:29.187701   15200 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:02:29 GMT
I0920 05:02:29.187701   15200 round_trippers.go:580]     Audit-Id: ae11e196-d258-4918-a2e6-c1fcabb3e061
I0920 05:02:29.187701   15200 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:02:29.187701   15200 round_trippers.go:580]     Content-Type: application/json
I0920 05:02:29.187701   15200 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 3a08d23e-57af-4017-b3c5-7760df44978a
I0920 05:02:29.188778   15200 request.go:1073] Response Body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"270"},"items":[{"metadata":{"name":"etcd-minikube","namespace":"kube-system","uid":"374c34df-28c1-4dd1-985e-56dd2145857b","resourceVersion":"257","creationTimestamp":"2022-09-20T10:02:26Z","labels":{"component":"etcd","tier":"control-plane"},"annotations":{"kubeadm.kubernetes.io/etcd.advertise-client-urls":"https://192.168.49.2:2379","kubernetes.io/config.hash":"906edd533192a4db2396a938662a5271","kubernetes.io/config.mirror":"906edd533192a4db2396a938662a5271","kubernetes.io/config.seen":"2022-09-20T10:02:25.889233000Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"70461691-44f2-4927-977e-dad886983805","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubeadm.kubernetes.io/etcd.advertise-client-urls":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"70461691-44f2-4927-977e-dad886983805\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"etcd\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/lib/minikube/certs/etcd\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/minikube/etcd\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"etcd-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"etcd-data\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}}]},"spec":{"volumes":[{"name":"etcd-certs","hostPath":{"path":"/var/lib/minikube/certs/etcd","type":"DirectoryOrCreate"}},{"name":"etcd-data","hostPath":{"path":"/var/lib/minikube/etcd","type":"DirectoryOrCreate"}}],"containers":[{"name":"etcd","image":"k8s.gcr.io/etcd:3.5.3-0","command":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"],"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"name":"etcd-data","mountPath":"/var/lib/minikube/etcd"},{"name":"etcd-certs","mountPath":"/var/lib/minikube/certs/etcd"}],"livenessProbe":{"httpGet":{"path":"/health","port":2381,"host":"127.0.0.1","scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"startupProbe":{"httpGet":{"path":"/health","port":2381,"host":"127.0.0.1","scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Pending","qosClass":"Burstable"}},{"metadata":{"name":"kube-apiserver-minikube","namespace":"kube-system","uid":"fa42e5ed-cff4-400a-8c56-5888e5bc491a","resourceVersion":"265","creationTimestamp":"2022-09-20T10:02:26Z","labels":{"component":"kube-apiserver","tier":"control-plane"},"annotations":{"kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint":"192.168.49.2:8443","kubernetes.io/config.hash":"af8a252bb89a737e9c95199d01283487","kubernetes.io/config.mirror":"af8a252bb89a737e9c95199d01283487","kubernetes.io/config.seen":"2022-09-20T10:02:25.889263000Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"70461691-44f2-4927-977e-dad886983805","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"70461691-44f2-4927-977e-dad886983805\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-apiserver\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/ssl/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/local/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/var/lib/minikube/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"ca-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"etc-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"k8s-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-local-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.2\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"ca-certs","hostPath":{"path":"/etc/ssl/certs","type":"DirectoryOrCreate"}},{"name":"etc-ca-certificates","hostPath":{"path":"/etc/ca-certificates","type":"DirectoryOrCreate"}},{"name":"k8s-certs","hostPath":{"path":"/var/lib/minikube/certs","type":"DirectoryOrCreate"}},{"name":"usr-local-share-ca-certificates","hostPath":{"path":"/usr/local/share/ca-certificates","type":"DirectoryOrCreate"}},{"name":"usr-share-ca-certificates","hostPath":{"path":"/usr/share/ca-certificates","type":"DirectoryOrCreate"}}],"containers":[{"name":"kube-apiserver","image":"k8s.gcr.io/kube-apiserver:v1.24.3","command":["kube-apiserver","--advertise-address=192.168.49.2","--allow-privileged=true","--authorization-mode=Node,RBAC","--client-ca-file=/var/lib/minikube/certs/ca.crt","--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota","--enable-bootstrap-token-auth=true","--etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt","--etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt","--etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key","--etcd-servers=https://127.0.0.1:2379","--kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt","--kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key","--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname","--proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt","--proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key","--requestheader-allowed-names=front-proxy-client","--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt","--requestheader-extra-headers-prefix=X-Remote-Extra-","--requestheader-group-headers=X-Remote-Group","--requestheader-username-headers=X-Remote-User","--secure-port=8443","--service-account-issuer=https://kubernetes.default.svc.cluster.local","--service-account-key-file=/var/lib/minikube/certs/sa.pub","--service-account-signing-key-file=/var/lib/minikube/certs/sa.key","--service-cluster-ip-range=10.96.0.0/12","--tls-cert-file=/var/lib/minikube/certs/apiserver.crt","--tls-private-key-file=/var/lib/minikube/certs/apiserver.key"],"resources":{"requests":{"cpu":"250m"}},"volumeMounts":[{"name":"ca-certs","readOnly":true,"mountPath":"/etc/ssl/certs"},{"name":"etc-ca-certificates","readOnly":true,"mountPath":"/etc/ca-certificates"},{"name":"k8s-certs","readOnly":true,"mountPath":"/var/lib/minikube/certs"},{"name":"usr-local-share-ca-certificates","readOnly":true,"mountPath":"/usr/local/share/ca-certificates"},{"name":"usr-share-ca-certificates","readOnly":true,"mountPath":"/usr/share/ca-certificates"}],"livenessProbe":{"httpGet":{"path":"/livez","port":8443,"host":"192.168.49.2","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"readinessProbe":{"httpGet":{"path":"/readyz","port":8443,"host":"192.168.49.2","scheme":"HTTPS"},"timeoutSeconds":15,"periodSeconds":1,"successThreshold":1,"failureThreshold":3},"startupProbe":{"httpGet":{"path":"/livez","port":8443,"host":"192.168.49.2","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:26Z"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:27Z","reason":"ContainersNotReady","message":"containers with unready status: [kube-apiserver]"},{"type":"ContainersReady","status":"False","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:27Z","reason":"ContainersNotReady","message":"containers with unready status: [kube-apiserver]"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:26Z"}],"hostIP":"192.168.49.2","podIP":"192.168.49.2","podIPs":[{"ip":"192.168.49.2"}],"startTime":"2022-09-20T10:02:26Z","containerStatuses":[{"name":"kube-apiserver","state":{"running":{"startedAt":"2022-09-20T10:02:19Z"}},"lastState":{},"ready":false,"restartCount":0,"image":"k8s.gcr.io/kube-apiserver:v1.24.3","imageID":"docker-pullable://k8s.gcr.io/kube-apiserver@sha256:a04609b85962da7e6531d32b75f652b4fb9f5fe0b0ee0aa160856faad8ec5d96","containerID":"docker://67023948854a5fa5496a6161508cd925fa92574e0bf41715d54730845f257dc1","started":false}],"qosClass":"Burstable"}},{"metadata":{"name":"kube-controller-manager-minikube","namespace":"kube-system","uid":"85864e80-33f0-49b5-8686-5ecc378d7827","resourceVersion":"267","creationTimestamp":"2022-09-20T10:02:26Z","labels":{"component":"kube-controller-manager","tier":"control-plane"},"annotations":{"kubernetes.io/config.hash":"76444121a189d8a30add20fb32ab6d4e","kubernetes.io/config.mirror":"76444121a189d8a30add20fb32ab6d4e","kubernetes.io/config.seen":"2022-09-20T10:02:25.889266300Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"70461691-44f2-4927-977e-dad886983805","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"70461691-44f2-4927-977e-dad886983805\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-controller-manager\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/kubernetes/controller-manager.conf\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/ssl/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/usr/local/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/var/lib/minikube/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"ca-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"etc-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"flexvolume-dir\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"k8s-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"kubeconfig\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-local-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{".":{},"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.2\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"ca-certs","hostPath":{"path":"/etc/ssl/certs","type":"DirectoryOrCreate"}},{"name":"etc-ca-certificates","hostPath":{"path":"/etc/ca-certificates","type":"DirectoryOrCreate"}},{"name":"flexvolume-dir","hostPath":{"path":"/usr/libexec/kubernetes/kubelet-plugins/volume/exec","type":"DirectoryOrCreate"}},{"name":"k8s-certs","hostPath":{"path":"/var/lib/minikube/certs","type":"DirectoryOrCreate"}},{"name":"kubeconfig","hostPath":{"path":"/etc/kubernetes/controller-manager.conf","type":"FileOrCreate"}},{"name":"usr-local-share-ca-certificates","hostPath":{"path":"/usr/local/share/ca-certificates","type":"DirectoryOrCreate"}},{"name":"usr-share-ca-certificates","hostPath":{"path":"/usr/share/ca-certificates","type":"DirectoryOrCreate"}}],"containers":[{"name":"kube-controller-manager","image":"k8s.gcr.io/kube-controller-manager:v1.24.3","command":["kube-controller-manager","--allocate-node-cidrs=true","--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf","--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf","--bind-address=127.0.0.1","--client-ca-file=/var/lib/minikube/certs/ca.crt","--cluster-cidr=10.244.0.0/16","--cluster-name=mk","--cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt","--cluster-signing-key-file=/var/lib/minikube/certs/ca.key","--controllers=*,bootstrapsigner,tokencleaner","--kubeconfig=/etc/kubernetes/controller-manager.conf","--leader-elect=false","--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt","--root-ca-file=/var/lib/minikube/certs/ca.crt","--service-account-private-key-file=/var/lib/minikube/certs/sa.key","--service-cluster-ip-range=10.96.0.0/12","--use-service-account-credentials=true"],"resources":{"requests":{"cpu":"200m"}},"volumeMounts":[{"name":"ca-certs","readOnly":true,"mountPath":"/etc/ssl/certs"},{"name":"etc-ca-certificates","readOnly":true,"mountPath":"/etc/ca-certificates"},{"name":"flexvolume-dir","mountPath":"/usr/libexec/kubernetes/kubelet-plugins/volume/exec"},{"name":"k8s-certs","readOnly":true,"mountPath":"/var/lib/minikube/certs"},{"name":"kubeconfig","readOnly":true,"mountPath":"/etc/kubernetes/controller-manager.conf"},{"name":"usr-local-share-ca-certificates","readOnly":true,"mountPath":"/usr/local/share/ca-certificates"},{"name":"usr-share-ca-certificates","readOnly":true,"mountPath":"/usr/share/ca-certificates"}],"livenessProbe":{"httpGet":{"path":"/healthz","port":10257,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"startupProbe":{"httpGet":{"path":"/healthz","port":10257,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:26Z"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:27Z","reason":"ContainersNotReady","message":"containers with unready status: [kube-controller-manager]"},{"type":"ContainersReady","status":"False","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:27Z","reason":"ContainersNotReady","message":"containers with unready status: [kube-controller-manager]"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-09-20T10:02:26Z"}],"hostIP":"192.168.49.2","podIP":"192.168.49.2","podIPs":[{"ip":"192.168.49.2"}],"startTime":"2022-09-20T10:02:26Z","containerStatuses":[{"name":"kube-controller-manager","state":{"running":{"startedAt":"2022-09-20T10:02:19Z"}},"lastState":{},"ready":false,"restartCount":0,"image":"k8s.gcr.io/kube-controller-manager:v1.24.3","imageID":"docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:f504eead8b8674ebc9067370ef51abbdc531b4a81813bfe464abccb8c76b6a53","containerID":"docker://25d437ca7fdc0c0cf6c85980bb2cb6ac77ccd710811d840568c625c6135f7c40","started":false}],"qosClass":"Burstable"}},{"metadata":{"name":"kube-scheduler-minikube","namespace":"kube-system","uid":"fb815c00-64a4-4adc-8b04-4930c4c5c4ad","resourceVersion":"258","creationTimestamp":"2022-09-20T10:02:26Z","labels":{"component":"kube-scheduler","tier":"control-plane"},"annotations":{"kubernetes.io/config.hash":"2e95d5efbc70e877d20097c03ba4ff89","kubernetes.io/config.mirror":"2e95d5efbc70e877d20097c03ba4ff89","kubernetes.io/config.seen":"2022-09-20T10:02:25.889270300Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"70461691-44f2-4927-977e-dad886983805","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"70461691-44f2-4927-977e-dad886983805\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-scheduler\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/kubernetes/scheduler.conf\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"kubeconfig\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}}]},"spec":{"volumes":[{"name":"kubeconfig","hostPath":{"path":"/etc/kubernetes/scheduler.conf","type":"FileOrCreate"}}],"containers":[{"name":"kube-scheduler","image":"k8s.gcr.io/kube-scheduler:v1.24.3","command":["kube-scheduler","--authentication-kubeconfig=/etc/kubernetes/scheduler.conf","--authorization-kubeconfig=/etc/kubernetes/scheduler.conf","--bind-address=127.0.0.1","--kubeconfig=/etc/kubernetes/scheduler.conf","--leader-elect=false"],"resources":{"requests":{"cpu":"100m"}},"volumeMounts":[{"name":"kubeconfig","readOnly":true,"mountPath":"/etc/kubernetes/scheduler.conf"}],"livenessProbe":{"httpGet":{"path":"/healthz","port":10259,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"startupProbe":{"httpGet":{"path":"/healthz","port":10259,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Pending","qosClass":"Burstable"}}]}
I0920 05:02:29.188778   15200 command_runner.go:130] > rolebinding.rbac.authorization.k8s.io/system:persistent-volume-provisioner created
I0920 05:02:29.192548   15200 system_pods.go:59] 4 kube-system pods found
I0920 05:02:29.192548   15200 system_pods.go:61] "etcd-minikube" [374c34df-28c1-4dd1-985e-56dd2145857b] Pending
I0920 05:02:29.192548   15200 system_pods.go:61] "kube-apiserver-minikube" [fa42e5ed-cff4-400a-8c56-5888e5bc491a] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0920 05:02:29.192548   15200 system_pods.go:61] "kube-controller-manager-minikube" [85864e80-33f0-49b5-8686-5ecc378d7827] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0920 05:02:29.192548   15200 system_pods.go:61] "kube-scheduler-minikube" [fb815c00-64a4-4adc-8b04-4930c4c5c4ad] Pending
I0920 05:02:29.192548   15200 system_pods.go:74] duration metric: took 9.1984ms to wait for pod list to return data ...
I0920 05:02:29.192548   15200 kubeadm.go:572] duration metric: took 1.942261s to wait for : map[apiserver:true system_pods:true] ...
I0920 05:02:29.192548   15200 node_conditions.go:102] verifying NodePressure condition ...
I0920 05:02:29.192548   15200 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55550/api/v1/nodes'
I0920 05:02:29.195291   15200 round_trippers.go:553] GET https://127.0.0.1:55550/api/v1/nodes 200 OK in 2 milliseconds
I0920 05:02:29.195291   15200 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 2 ms Duration 2 ms
I0920 05:02:29.195291   15200 round_trippers.go:577] Response Headers:
I0920 05:02:29.195291   15200 round_trippers.go:580]     Audit-Id: 27304ecc-b9e0-4c19-bbf7-44b99672b9ca
I0920 05:02:29.195291   15200 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:02:29.195291   15200 round_trippers.go:580]     Content-Type: application/json
I0920 05:02:29.195291   15200 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 3a08d23e-57af-4017-b3c5-7760df44978a
I0920 05:02:29.195291   15200 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 18dad75e-6c87-48ea-af75-5feae41aa6b3
I0920 05:02:29.195291   15200 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:02:29 GMT
I0920 05:02:29.195816   15200 request.go:1073] Response Body: {"kind":"NodeList","apiVersion":"v1","metadata":{"resourceVersion":"271"},"items":[{"metadata":{"name":"minikube","uid":"70461691-44f2-4927-977e-dad886983805","resourceVersion":"261","creationTimestamp":"2022-09-20T10:02:24Z","labels":{"beta.kubernetes.io/arch":"amd64","beta.kubernetes.io/os":"linux","kubernetes.io/arch":"amd64","kubernetes.io/hostname":"minikube","kubernetes.io/os":"linux","minikube.k8s.io/commit":"62e108c3dfdec8029a890ad6d8ef96b6461426dc","minikube.k8s.io/name":"minikube","minikube.k8s.io/primary":"true","minikube.k8s.io/updated_at":"2022_09_20T05_02_25_0700","minikube.k8s.io/version":"v1.26.1","node-role.kubernetes.io/control-plane":"","node.kubernetes.io/exclude-from-external-load-balancers":""},"annotations":{"kubeadm.alpha.kubernetes.io/cri-socket":"unix:///var/run/cri-dockerd.sock","volumes.kubernetes.io/controller-managed-attach-detach":"true"},"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}}},{"manager":"kubeadm","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubeadm.alpha.kubernetes.io/cri-socket":{}},"f:labels":{"f:node-role.kubernetes.io/control-plane":{},"f:node.kubernetes.io/exclude-from-external-load-balancers":{}}}}},{"manager":"kubectl-label","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{"f:minikube.k8s.io/commit":{},"f:minikube.k8s.io/name":{},"f:minikube.k8s.io/primary":{},"f:minikube.k8s.io/updated_at":{},"f:minikube.k8s.io/version":{}}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:02:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:message":{}}},"f:images":{}}},"subresource":"status"}]},"spec":{"taints":[{"key":"node.kubernetes.io/not-ready","effect":"NoSchedule"}]},"status":{"capacity":{"cpu":"12","ephemeral-storage":"263174212Ki","hugepages-1Gi":"0","hugepages-2Mi":"0","memory":"12923048Ki","pods":"110"},"allocatable":{"cpu":"12","ephemeral-storage":"263174212Ki","hugepages-1Gi":"0","hugepages-2Mi":"0","memory":"12923048Ki","pods":"110"},"conditions":[{"type":"MemoryPressure","status":"False","lastHeartbeatTime":"2022-09-20T10:02:26Z","lastTransitionTime":"2022-09-20T10:02:24Z","reason":"KubeletHasSufficientMemory","message":"kubelet has sufficient memory available"},{"type":"DiskPressure","status":"False","lastHeartbeatTime":"2022-09-20T10:02:26Z","lastTransitionTime":"2022-09-20T10:02:24Z","reason":"KubeletHasNoDiskPressure","message":"kubelet has no disk pressure"},{"type":"PIDPressure","status":"False","lastHeartbeatTime":"2022-09-20T10:02:26Z","lastTransitionTime":"2022-09-20T10:02:24Z","reason":"KubeletHasSufficientPID","message":"kubelet has sufficient PID available"},{"type":"Ready","status":"False","lastHeartbeatTime":"2022-09-20T10:02:26Z","lastTransitionTime":"2022-09-20T10:02:24Z","reason":"KubeletNotReady","message":"container runtime status check may not have completed yet"}],"addresses":[{"type":"InternalIP","address":"192.168.49.2"},{"type":"Hostname","address":"minikube"}],"daemonEndpoints":{"kubeletEndpoint":{"Port":10250}},"nodeInfo":{"machineID":"4c192b04687c403f8fbb9bc7975b21b3","systemUUID":"4c192b04687c403f8fbb9bc7975b21b3","bootID":"de31de94-2a42-4516-a4e6-7cb2de739fde","kernelVersion":"5.10.102.1-microsoft-standard-WSL2","osImage":"Ubuntu 20.04.4 LTS","containerRuntimeVersion":"docker://20.10.17","kubeletVersion":"v1.24.3","kubeProxyVersion":"v1.24.3","operatingSystem":"linux","architecture":"amd64"},"images":[{"names":["k8s.gcr.io/etcd@sha256:13f53ed1d91e2e11aac476ee9a0269fdda6cc4874eba903efd40daf50c55eee5","k8s.gcr.io/etcd:3.5.3-0"],"sizeBytes":299495233},{"names":["k8s.gcr.io/kube-apiserver@sha256:a04609b85962da7e6531d32b75f652b4fb9f5fe0b0ee0aa160856faad8ec5d96","k8s.gcr.io/kube-apiserver:v1.24.3"],"sizeBytes":129710737},{"names":["k8s.gcr.io/kube-controller-manager@sha256:f504eead8b8674ebc9067370ef51abbdc531b4a81813bfe464abccb8c76b6a53","k8s.gcr.io/kube-controller-manager:v1.24.3"],"sizeBytes":119360464},{"names":["k8s.gcr.io/kube-proxy@sha256:c1b135231b5b1a6799346cd701da4b59e5b7ef8e694ec7b04fb23b8dbe144137","k8s.gcr.io/kube-proxy:v1.24.3"],"sizeBytes":109939784},{"names":["k8s.gcr.io/kube-scheduler@sha256:e199523298224cd9f2a9a43c7c2c37fa57aff87648ed1e1de9984eba6f6005f0","k8s.gcr.io/kube-scheduler:v1.24.3"],"sizeBytes":50989989},{"names":["k8s.gcr.io/coredns/coredns@sha256:5b6ec0d6de9baaf3e92d0f66cd96a25b9edbce8716f5f15dcd1a616b3abd590e","k8s.gcr.io/coredns/coredns:v1.8.6"],"sizeBytes":46829283},{"names":["gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944","gcr.io/k8s-minikube/storage-provisioner:v5"],"sizeBytes":31465472},{"names":["k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c","k8s.gcr.io/pause:3.7"],"sizeBytes":711184},{"names":["k8s.gcr.io/pause@sha256:3d380ca8864549e74af4b29c10f9cb0956236dfb01c40ca076fb6c37253234db","k8s.gcr.io/pause:3.6"],"sizeBytes":682696}]}}]}
I0920 05:02:29.195816   15200 command_runner.go:130] > endpoints/k8s.io-minikube-hostpath created
I0920 05:02:29.196358   15200 node_conditions.go:122] node storage ephemeral capacity is 263174212Ki
I0920 05:02:29.196358   15200 node_conditions.go:123] node cpu capacity is 12
I0920 05:02:29.196358   15200 node_conditions.go:105] duration metric: took 3.8099ms to run NodePressure ...
I0920 05:02:29.196358   15200 start.go:216] waiting for startup goroutines ...
I0920 05:02:29.203307   15200 command_runner.go:130] > pod/storage-provisioner created
I0920 05:02:29.207087   15200 command_runner.go:130] > storageclass.storage.k8s.io/standard created
I0920 05:02:29.207087   15200 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.24.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: (1.1550081s)
I0920 05:02:29.207087   15200 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.24.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (1.4292064s)
I0920 05:02:29.210830   15200 out.go:177] 🌟  Enabled addons: default-storageclass
I0920 05:02:29.216658   15200 addons.go:414] enableAddons completed in 1.9663711s
I0920 05:02:29.424350   15200 start.go:506] kubectl: 1.25.1, cluster: 1.24.3 (minor skew: 1)
I0920 05:02:29.426566   15200 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
Log file created at: 2022/09/20 05:06:57
Running on machine: DESKTOP-9D9FOPT
Binary: Built with gc go1.18.3 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0920 05:06:57.026634   16936 out.go:296] Setting OutFile to fd 3196 ...
I0920 05:06:57.027635   16936 out.go:309] Setting ErrFile to fd 96...
I0920 05:06:57.038634   16936 out.go:303] Setting JSON to false
I0920 05:06:57.045088   16936 start.go:115] hostinfo: {"hostname":"DESKTOP-9D9FOPT","uptime":5843,"bootTime":1663662574,"procs":301,"os":"windows","platform":"Microsoft Windows 10 Home","platformFamily":"Standalone Workstation","platformVersion":"10.0.19044 Build 19044","kernelVersion":"10.0.19044 Build 19044","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"1b124a21-ded5-4c8f-8353-aebb67e61cfb"}
W0920 05:06:57.045088   16936 start.go:123] gopshost.Virtualization returned error: not implemented yet
I0920 05:06:57.049372   16936 out.go:177] 😄  minikube v1.26.1 on Microsoft Windows 10 Home 10.0.19044 Build 19044
I0920 05:06:57.051498   16936 notify.go:193] Checking for updates...
I0920 05:06:57.052017   16936 driver.go:365] Setting default libvirt URI to qemu:///system
I0920 05:06:57.211365   16936 docker.go:137] docker version: linux-20.10.16
I0920 05:06:57.222192   16936 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:06:57.583185   16936 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:51 OomKillDisable:true NGoroutines:52 SystemTime:2022-09-20 10:06:57.3296546 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:06:57.586603   16936 out.go:177] ✨  Using the docker driver based on user configuration
I0920 05:06:57.588122   16936 start.go:284] selected driver: docker
I0920 05:06:57.588122   16936 start.go:808] validating driver "docker" against <nil>
I0920 05:06:57.588122   16936 start.go:819] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0920 05:06:57.610483   16936 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:06:57.968933   16936 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:51 OomKillDisable:true NGoroutines:52 SystemTime:2022-09-20 10:06:57.7186732 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:06:57.968933   16936 start_flags.go:296] no existing cluster config was found, will generate one from the flags 
I0920 05:06:58.059236   16936 start_flags.go:377] Using suggested 4000MB memory alloc based on sys=16190MB, container=12620MB
I0920 05:06:58.059236   16936 start_flags.go:835] Wait components to verify : map[apiserver:true system_pods:true]
I0920 05:06:58.062403   16936 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0920 05:06:58.066101   16936 cni.go:95] Creating CNI manager for ""
I0920 05:06:58.066101   16936 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0920 05:06:58.066101   16936 start_flags.go:310] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0920 05:06:58.068737   16936 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0920 05:06:58.072890   16936 cache.go:120] Beginning downloading kic base image for docker with docker
I0920 05:06:58.078110   16936 out.go:177] 🚜  Pulling base image ...
I0920 05:06:58.082295   16936 image.go:75] Checking for gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 in local docker daemon
I0920 05:06:58.082295   16936 preload.go:132] Checking if preload exists for k8s version v1.24.3 and runtime docker
I0920 05:06:58.082295   16936 preload.go:148] Found local preload: C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4
I0920 05:06:58.082295   16936 cache.go:57] Caching tarball of preloaded images
I0920 05:06:58.082295   16936 preload.go:174] Found C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0920 05:06:58.082295   16936 cache.go:60] Finished verifying existence of preloaded tar for  v1.24.3 on docker
I0920 05:06:58.082295   16936 profile.go:148] Saving config to C:\Users\Esteban\.minikube\profiles\minikube\config.json ...
I0920 05:06:58.082295   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\config.json: {Name:mk2a00695caa01573162753941d974857a7beb3e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:06:58.231384   16936 image.go:79] Found gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 in local docker daemon, skipping pull
I0920 05:06:58.231384   16936 cache.go:142] gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 exists in daemon, skipping load
I0920 05:06:58.231384   16936 cache.go:208] Successfully downloaded all kic artifacts
I0920 05:06:58.231384   16936 start.go:371] acquiring machines lock for minikube: {Name:mkb1a3f9dd56644c74d06159971e44ffb1f7dc12 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0920 05:06:58.231384   16936 start.go:375] acquired machines lock for "minikube" in 0s
I0920 05:06:58.231384   16936 start.go:92] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:} &{Name: IP: Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0920 05:06:58.231943   16936 start.go:132] createHost starting for "" (driver="docker")
I0920 05:06:58.234580   16936 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0920 05:06:58.234580   16936 start.go:166] libmachine.API.Create for "minikube" (driver="docker")
I0920 05:06:58.234580   16936 client.go:168] LocalClient.Create starting
I0920 05:06:58.235103   16936 main.go:134] libmachine: Reading certificate data from C:\Users\Esteban\.minikube\certs\ca.pem
I0920 05:06:58.235103   16936 main.go:134] libmachine: Decoding PEM data...
I0920 05:06:58.235103   16936 main.go:134] libmachine: Parsing certificate...
I0920 05:06:58.235103   16936 main.go:134] libmachine: Reading certificate data from C:\Users\Esteban\.minikube\certs\cert.pem
I0920 05:06:58.235103   16936 main.go:134] libmachine: Decoding PEM data...
I0920 05:06:58.235103   16936 main.go:134] libmachine: Parsing certificate...
I0920 05:06:58.248729   16936 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0920 05:06:58.400338   16936 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0920 05:06:58.412044   16936 network_create.go:272] running [docker network inspect minikube] to gather additional debugging logs...
I0920 05:06:58.412044   16936 cli_runner.go:164] Run: docker network inspect minikube
W0920 05:06:58.555595   16936 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0920 05:06:58.555595   16936 network_create.go:275] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error: No such network: minikube
I0920 05:06:58.555595   16936 network_create.go:277] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error: No such network: minikube

** /stderr **
I0920 05:06:58.567751   16936 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0920 05:06:58.841868   16936 network.go:288] reserving subnet 192.168.49.0 for 1m0s: &{mu:{state:0 sema:0} read:{v:{m:map[] amended:true}} dirty:map[192.168.49.0:0xc0005901a8] misses:0}
I0920 05:06:58.841868   16936 network.go:235] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:}}
I0920 05:06:58.841868   16936 network_create.go:115] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0920 05:06:58.854238   16936 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0920 05:06:59.051709   16936 network_create.go:99] docker network minikube 192.168.49.0/24 created
I0920 05:06:59.051709   16936 kic.go:106] calculated static IP "192.168.49.2" for the "minikube" container
I0920 05:06:59.074113   16936 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0920 05:06:59.218081   16936 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0920 05:06:59.377596   16936 oci.go:103] Successfully created a docker volume minikube
I0920 05:06:59.388392   16936 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -d /var/lib
I0920 05:07:01.041751   16936 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -d /var/lib: (1.6532755s)
I0920 05:07:01.041751   16936 oci.go:107] Successfully prepared a docker volume minikube
I0920 05:07:01.041751   16936 preload.go:132] Checking if preload exists for k8s version v1.24.3 and runtime docker
I0920 05:07:01.041751   16936 kic.go:179] Starting extracting preloaded images to volume ...
I0920 05:07:01.051834   16936 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -I lz4 -xf /preloaded.tar -C /extractDir
I0920 05:07:28.747977   16936 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Esteban\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.24.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 -I lz4 -xf /preloaded.tar -C /extractDir: (27.6961432s)
I0920 05:07:28.747977   16936 kic.go:188] duration metric: took 27.706226 seconds to extract preloaded images to volume
I0920 05:07:28.758537   16936 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0920 05:07:29.151625   16936 info.go:265] docker info: {ID:L7ZV:4RQ3:VGXF:PEOU:J5XA:5F73:RDPM:ANUF:ZH5V:B6LC:XKSZ:SFZC Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:6 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:50 OomKillDisable:true NGoroutines:52 SystemTime:2022-09-20 10:07:28.8855025 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:5 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:13233201152 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.16 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 Expected:212e8b6fa2f44b9c21b2798135fc6fb7c53efc16} RuncCommit:{ID:v1.1.1-0-g52de29d Expected:v1.1.1-0-g52de29d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.8.2] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.6.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.17.0]] Warnings:<nil>}}
I0920 05:07:29.162272   16936 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0920 05:07:29.549861   16936 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4000mb --memory-swap=4000mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8
I0920 05:07:30.275188   16936 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0920 05:07:30.441642   16936 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:07:30.631585   16936 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0920 05:07:30.899284   16936 oci.go:144] the created container "minikube" has a running status.
I0920 05:07:30.899382   16936 kic.go:210] Creating ssh key for kic: C:\Users\Esteban\.minikube\machines\minikube\id_rsa...
I0920 05:07:31.040253   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\machines\minikube\id_rsa.pub -> /home/docker/.ssh/authorized_keys
I0920 05:07:31.044242   16936 kic_runner.go:191] docker (temp): C:\Users\Esteban\.minikube\machines\minikube\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0920 05:07:31.286330   16936 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:07:31.457304   16936 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0920 05:07:31.457304   16936 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0920 05:07:31.728172   16936 kic.go:250] ensuring only current user has permissions to key file located at : C:\Users\Esteban\.minikube\machines\minikube\id_rsa...
I0920 05:07:32.140317   16936 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:07:32.305733   16936 machine.go:88] provisioning docker machine ...
I0920 05:07:32.305733   16936 ubuntu.go:169] provisioning hostname "minikube"
I0920 05:07:32.316165   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:32.463896   16936 main.go:134] libmachine: Using SSH client type: native
I0920 05:07:32.464452   16936 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55634 <nil> <nil>}
I0920 05:07:32.464452   16936 main.go:134] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0920 05:07:32.598340   16936 main.go:134] libmachine: SSH cmd err, output: <nil>: minikube

I0920 05:07:32.608857   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:32.761198   16936 main.go:134] libmachine: Using SSH client type: native
I0920 05:07:32.761444   16936 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55634 <nil> <nil>}
I0920 05:07:32.761444   16936 main.go:134] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0920 05:07:32.898246   16936 main.go:134] libmachine: SSH cmd err, output: <nil>: 
I0920 05:07:32.898246   16936 ubuntu.go:175] set auth options {CertDir:C:\Users\Esteban\.minikube CaCertPath:C:\Users\Esteban\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\Esteban\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\Esteban\.minikube\machines\server.pem ServerKeyPath:C:\Users\Esteban\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\Esteban\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\Esteban\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\Esteban\.minikube}
I0920 05:07:32.898246   16936 ubuntu.go:177] setting up certificates
I0920 05:07:32.898246   16936 provision.go:83] configureAuth start
I0920 05:07:32.908710   16936 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0920 05:07:33.058062   16936 provision.go:138] copyHostCerts
I0920 05:07:33.058062   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\ca.pem -> C:\Users\Esteban\.minikube/ca.pem
I0920 05:07:33.058062   16936 exec_runner.go:144] found C:\Users\Esteban\.minikube/ca.pem, removing ...
I0920 05:07:33.058062   16936 exec_runner.go:207] rm: C:\Users\Esteban\.minikube\ca.pem
I0920 05:07:33.058062   16936 exec_runner.go:151] cp: C:\Users\Esteban\.minikube\certs\ca.pem --> C:\Users\Esteban\.minikube/ca.pem (1082 bytes)
I0920 05:07:33.058720   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\cert.pem -> C:\Users\Esteban\.minikube/cert.pem
I0920 05:07:33.058720   16936 exec_runner.go:144] found C:\Users\Esteban\.minikube/cert.pem, removing ...
I0920 05:07:33.058720   16936 exec_runner.go:207] rm: C:\Users\Esteban\.minikube\cert.pem
I0920 05:07:33.058720   16936 exec_runner.go:151] cp: C:\Users\Esteban\.minikube\certs\cert.pem --> C:\Users\Esteban\.minikube/cert.pem (1123 bytes)
I0920 05:07:33.059245   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\key.pem -> C:\Users\Esteban\.minikube/key.pem
I0920 05:07:33.059245   16936 exec_runner.go:144] found C:\Users\Esteban\.minikube/key.pem, removing ...
I0920 05:07:33.059245   16936 exec_runner.go:207] rm: C:\Users\Esteban\.minikube\key.pem
I0920 05:07:33.059245   16936 exec_runner.go:151] cp: C:\Users\Esteban\.minikube\certs\key.pem --> C:\Users\Esteban\.minikube/key.pem (1679 bytes)
I0920 05:07:33.059768   16936 provision.go:112] generating server cert: C:\Users\Esteban\.minikube\machines\server.pem ca-key=C:\Users\Esteban\.minikube\certs\ca.pem private-key=C:\Users\Esteban\.minikube\certs\ca-key.pem org=Esteban.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0920 05:07:33.212223   16936 provision.go:172] copyRemoteCerts
I0920 05:07:33.219222   16936 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0920 05:07:33.230222   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:33.369353   16936 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55634 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:07:33.411632   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\machines\server-key.pem -> /etc/docker/server-key.pem
I0920 05:07:33.412162   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0920 05:07:33.430353   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\certs\ca.pem -> /etc/docker/ca.pem
I0920 05:07:33.430353   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1082 bytes)
I0920 05:07:33.449228   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\machines\server.pem -> /etc/docker/server.pem
I0920 05:07:33.449228   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\machines\server.pem --> /etc/docker/server.pem (1204 bytes)
I0920 05:07:33.468400   16936 provision.go:86] duration metric: configureAuth took 570.1545ms
I0920 05:07:33.468400   16936 ubuntu.go:193] setting minikube options for container-runtime
I0920 05:07:33.468934   16936 config.go:180] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.24.3
I0920 05:07:33.480669   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:33.639193   16936 main.go:134] libmachine: Using SSH client type: native
I0920 05:07:33.639716   16936 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55634 <nil> <nil>}
I0920 05:07:33.639716   16936 main.go:134] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0920 05:07:33.718509   16936 main.go:134] libmachine: SSH cmd err, output: <nil>: overlay

I0920 05:07:33.718509   16936 ubuntu.go:71] root file system type: overlay
I0920 05:07:33.718509   16936 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0920 05:07:33.729574   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:33.886148   16936 main.go:134] libmachine: Using SSH client type: native
I0920 05:07:33.886148   16936 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55634 <nil> <nil>}
I0920 05:07:33.886148   16936 main.go:134] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0920 05:07:33.969353   16936 main.go:134] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0920 05:07:33.980132   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:34.133069   16936 main.go:134] libmachine: Using SSH client type: native
I0920 05:07:34.133069   16936 main.go:134] libmachine: &{{{<nil> 0 [] [] []} docker [0x8d3da0] 0x8d6c00 <nil>  [] 0s} 127.0.0.1 55634 <nil> <nil>}
I0920 05:07:34.133069   16936 main.go:134] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0920 05:07:34.870013   16936 main.go:134] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2022-06-06 23:01:03.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2022-09-20 10:07:33.957612000 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
 Wants=network-online.target
-Requires=docker.socket containerd.service
+Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutSec=0
-RestartSec=2
-Restart=always
-
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
+Restart=on-failure
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0920 05:07:34.870013   16936 machine.go:91] provisioned docker machine in 2.5642804s
I0920 05:07:34.870013   16936 client.go:171] LocalClient.Create took 36.6354333s
I0920 05:07:34.870013   16936 start.go:174] duration metric: libmachine.API.Create for "minikube" took 36.6354333s
I0920 05:07:34.870013   16936 start.go:307] post-start starting for "minikube" (driver="docker")
I0920 05:07:34.870013   16936 start.go:335] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0920 05:07:34.876943   16936 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0920 05:07:34.888098   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:35.035280   16936 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55634 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:07:35.153133   16936 ssh_runner.go:195] Run: cat /etc/os-release
I0920 05:07:35.156871   16936 command_runner.go:130] > NAME="Ubuntu"
I0920 05:07:35.156871   16936 command_runner.go:130] > VERSION="20.04.4 LTS (Focal Fossa)"
I0920 05:07:35.156871   16936 command_runner.go:130] > ID=ubuntu
I0920 05:07:35.156871   16936 command_runner.go:130] > ID_LIKE=debian
I0920 05:07:35.156871   16936 command_runner.go:130] > PRETTY_NAME="Ubuntu 20.04.4 LTS"
I0920 05:07:35.156871   16936 command_runner.go:130] > VERSION_ID="20.04"
I0920 05:07:35.156871   16936 command_runner.go:130] > HOME_URL="https://www.ubuntu.com/"
I0920 05:07:35.156871   16936 command_runner.go:130] > SUPPORT_URL="https://help.ubuntu.com/"
I0920 05:07:35.156871   16936 command_runner.go:130] > BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
I0920 05:07:35.156871   16936 command_runner.go:130] > PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
I0920 05:07:35.156871   16936 command_runner.go:130] > VERSION_CODENAME=focal
I0920 05:07:35.156871   16936 command_runner.go:130] > UBUNTU_CODENAME=focal
I0920 05:07:35.157418   16936 main.go:134] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0920 05:07:35.157418   16936 main.go:134] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0920 05:07:35.157418   16936 main.go:134] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0920 05:07:35.157418   16936 info.go:137] Remote host: Ubuntu 20.04.4 LTS
I0920 05:07:35.157418   16936 filesync.go:126] Scanning C:\Users\Esteban\.minikube\addons for local assets ...
I0920 05:07:35.157418   16936 filesync.go:126] Scanning C:\Users\Esteban\.minikube\files for local assets ...
I0920 05:07:35.157418   16936 start.go:310] post-start completed in 287.4051ms
I0920 05:07:35.170211   16936 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0920 05:07:35.311832   16936 profile.go:148] Saving config to C:\Users\Esteban\.minikube\profiles\minikube\config.json ...
I0920 05:07:35.331652   16936 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0920 05:07:35.342284   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:35.481768   16936 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55634 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:07:35.568566   16936 command_runner.go:130] > 2%
I0920 05:07:35.586968   16936 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0920 05:07:35.592157   16936 command_runner.go:130] > 234G
I0920 05:07:35.592664   16936 start.go:135] duration metric: createHost completed in 37.3602146s
I0920 05:07:35.592664   16936 start.go:82] releasing machines lock for "minikube", held for 37.3612797s
I0920 05:07:35.603480   16936 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0920 05:07:35.779993   16936 ssh_runner.go:195] Run: curl -sS -m 2 https://k8s.gcr.io/
I0920 05:07:35.792625   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:35.795296   16936 ssh_runner.go:195] Run: systemctl --version
I0920 05:07:35.807044   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:35.945289   16936 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55634 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:07:35.960251   16936 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55634 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:07:36.415550   16936 command_runner.go:130] > <HTML><HEAD><meta http-equiv="content-type" content="text/html;charset=utf-8">
I0920 05:07:36.415550   16936 command_runner.go:130] > <TITLE>302 Moved</TITLE></HEAD><BODY>
I0920 05:07:36.415550   16936 command_runner.go:130] > <H1>302 Moved</H1>
I0920 05:07:36.415550   16936 command_runner.go:130] > The document has moved
I0920 05:07:36.415550   16936 command_runner.go:130] > <A HREF="https://cloud.google.com/container-registry/">here</A>.
I0920 05:07:36.415550   16936 command_runner.go:130] > </BODY></HTML>
I0920 05:07:36.415550   16936 command_runner.go:130] > systemd 245 (245.4-4ubuntu3.17)
I0920 05:07:36.415550   16936 command_runner.go:130] > +PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid
I0920 05:07:36.423560   16936 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0920 05:07:36.437023   16936 command_runner.go:130] > # /lib/systemd/system/docker.service
I0920 05:07:36.437023   16936 command_runner.go:130] > [Unit]
I0920 05:07:36.437023   16936 command_runner.go:130] > Description=Docker Application Container Engine
I0920 05:07:36.437023   16936 command_runner.go:130] > Documentation=https://docs.docker.com
I0920 05:07:36.437023   16936 command_runner.go:130] > BindsTo=containerd.service
I0920 05:07:36.437023   16936 command_runner.go:130] > After=network-online.target firewalld.service containerd.service
I0920 05:07:36.437023   16936 command_runner.go:130] > Wants=network-online.target
I0920 05:07:36.437023   16936 command_runner.go:130] > Requires=docker.socket
I0920 05:07:36.437023   16936 command_runner.go:130] > StartLimitBurst=3
I0920 05:07:36.437023   16936 command_runner.go:130] > StartLimitIntervalSec=60
I0920 05:07:36.437023   16936 command_runner.go:130] > [Service]
I0920 05:07:36.437023   16936 command_runner.go:130] > Type=notify
I0920 05:07:36.437023   16936 command_runner.go:130] > Restart=on-failure
I0920 05:07:36.437023   16936 command_runner.go:130] > # This file is a systemd drop-in unit that inherits from the base dockerd configuration.
I0920 05:07:36.437023   16936 command_runner.go:130] > # The base configuration already specifies an 'ExecStart=...' command. The first directive
I0920 05:07:36.437023   16936 command_runner.go:130] > # here is to clear out that command inherited from the base configuration. Without this,
I0920 05:07:36.437023   16936 command_runner.go:130] > # the command from the base configuration and the command specified here are treated as
I0920 05:07:36.437023   16936 command_runner.go:130] > # a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
I0920 05:07:36.437023   16936 command_runner.go:130] > # will catch this invalid input and refuse to start the service with an error like:
I0920 05:07:36.437023   16936 command_runner.go:130] > #  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
I0920 05:07:36.437023   16936 command_runner.go:130] > # NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
I0920 05:07:36.437023   16936 command_runner.go:130] > # container runtimes. If left unlimited, it may result in OOM issues with MySQL.
I0920 05:07:36.437023   16936 command_runner.go:130] > ExecStart=
I0920 05:07:36.437023   16936 command_runner.go:130] > ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
I0920 05:07:36.437023   16936 command_runner.go:130] > ExecReload=/bin/kill -s HUP $MAINPID
I0920 05:07:36.437023   16936 command_runner.go:130] > # Having non-zero Limit*s causes performance problems due to accounting overhead
I0920 05:07:36.437023   16936 command_runner.go:130] > # in the kernel. We recommend using cgroups to do container-local accounting.
I0920 05:07:36.437023   16936 command_runner.go:130] > LimitNOFILE=infinity
I0920 05:07:36.437023   16936 command_runner.go:130] > LimitNPROC=infinity
I0920 05:07:36.437023   16936 command_runner.go:130] > LimitCORE=infinity
I0920 05:07:36.437023   16936 command_runner.go:130] > # Uncomment TasksMax if your systemd version supports it.
I0920 05:07:36.437023   16936 command_runner.go:130] > # Only systemd 226 and above support this version.
I0920 05:07:36.437023   16936 command_runner.go:130] > TasksMax=infinity
I0920 05:07:36.437023   16936 command_runner.go:130] > TimeoutStartSec=0
I0920 05:07:36.437023   16936 command_runner.go:130] > # set delegate yes so that systemd does not reset the cgroups of docker containers
I0920 05:07:36.437023   16936 command_runner.go:130] > Delegate=yes
I0920 05:07:36.437023   16936 command_runner.go:130] > # kill only the docker process, not all processes in the cgroup
I0920 05:07:36.437023   16936 command_runner.go:130] > KillMode=process
I0920 05:07:36.437023   16936 command_runner.go:130] > [Install]
I0920 05:07:36.437023   16936 command_runner.go:130] > WantedBy=multi-user.target
I0920 05:07:36.437023   16936 cruntime.go:273] skipping containerd shutdown because we are bound to it
I0920 05:07:36.443702   16936 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0920 05:07:36.457320   16936 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
image-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0920 05:07:36.473580   16936 command_runner.go:130] > runtime-endpoint: unix:///var/run/cri-dockerd.sock
I0920 05:07:36.473580   16936 command_runner.go:130] > image-endpoint: unix:///var/run/cri-dockerd.sock
I0920 05:07:36.480499   16936 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0920 05:07:36.582448   16936 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0920 05:07:36.703313   16936 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0920 05:07:36.800729   16936 ssh_runner.go:195] Run: sudo systemctl restart docker
I0920 05:07:37.041756   16936 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0920 05:07:37.051783   16936 command_runner.go:130] ! Created symlink /etc/systemd/system/sockets.target.wants/cri-docker.socket → /lib/systemd/system/cri-docker.socket.
I0920 05:07:37.142346   16936 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0920 05:07:37.242741   16936 ssh_runner.go:195] Run: sudo systemctl start cri-docker.socket
I0920 05:07:37.256327   16936 start.go:450] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0920 05:07:37.277384   16936 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0920 05:07:37.282961   16936 command_runner.go:130] >   File: /var/run/cri-dockerd.sock
I0920 05:07:37.282961   16936 command_runner.go:130] >   Size: 0         	Blocks: 0          IO Block: 4096   socket
I0920 05:07:37.282961   16936 command_runner.go:130] > Device: 10001ah/1048602d	Inode: 170         Links: 1
I0920 05:07:37.282961   16936 command_runner.go:130] > Access: (0660/srw-rw----)  Uid: (    0/    root)   Gid: (  999/  docker)
I0920 05:07:37.282961   16936 command_runner.go:130] > Access: 2022-09-20 10:07:37.238910000 +0000
I0920 05:07:37.282961   16936 command_runner.go:130] > Modify: 2022-09-20 10:07:37.238910000 +0000
I0920 05:07:37.282961   16936 command_runner.go:130] > Change: 2022-09-20 10:07:37.238910000 +0000
I0920 05:07:37.282961   16936 command_runner.go:130] >  Birth: -
I0920 05:07:37.282961   16936 start.go:471] Will wait 60s for crictl version
I0920 05:07:37.291022   16936 ssh_runner.go:195] Run: sudo crictl version
I0920 05:07:37.393294   16936 command_runner.go:130] > Version:  0.1.0
I0920 05:07:37.393294   16936 command_runner.go:130] > RuntimeName:  docker
I0920 05:07:37.393294   16936 command_runner.go:130] > RuntimeVersion:  20.10.17
I0920 05:07:37.393294   16936 command_runner.go:130] > RuntimeApiVersion:  1.41.0
I0920 05:07:37.393294   16936 start.go:480] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  20.10.17
RuntimeApiVersion:  1.41.0
I0920 05:07:37.407690   16936 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0920 05:07:37.445170   16936 command_runner.go:130] > 20.10.17
I0920 05:07:37.457343   16936 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0920 05:07:37.489356   16936 command_runner.go:130] > 20.10.17
I0920 05:07:37.491981   16936 out.go:204] 🐳  Preparing Kubernetes v1.24.3 on Docker 20.10.17 ...
I0920 05:07:37.503861   16936 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0920 05:07:37.745230   16936 network.go:96] got host ip for mount in container by digging dns: 192.168.65.2
I0920 05:07:37.762788   16936 ssh_runner.go:195] Run: grep 192.168.65.2	host.minikube.internal$ /etc/hosts
I0920 05:07:37.768094   16936 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.2	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0920 05:07:37.789769   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0920 05:07:37.960498   16936 preload.go:132] Checking if preload exists for k8s version v1.24.3 and runtime docker
I0920 05:07:37.973170   16936 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0920 05:07:38.013082   16936 command_runner.go:130] > k8s.gcr.io/kube-apiserver:v1.24.3
I0920 05:07:38.013082   16936 command_runner.go:130] > k8s.gcr.io/kube-proxy:v1.24.3
I0920 05:07:38.013082   16936 command_runner.go:130] > k8s.gcr.io/kube-scheduler:v1.24.3
I0920 05:07:38.013082   16936 command_runner.go:130] > k8s.gcr.io/kube-controller-manager:v1.24.3
I0920 05:07:38.013082   16936 command_runner.go:130] > k8s.gcr.io/etcd:3.5.3-0
I0920 05:07:38.013082   16936 command_runner.go:130] > k8s.gcr.io/pause:3.7
I0920 05:07:38.013082   16936 command_runner.go:130] > k8s.gcr.io/coredns/coredns:v1.8.6
I0920 05:07:38.013082   16936 command_runner.go:130] > gcr.io/k8s-minikube/storage-provisioner:v5
I0920 05:07:38.013082   16936 docker.go:611] Got preloaded images: -- stdout --
k8s.gcr.io/kube-apiserver:v1.24.3
k8s.gcr.io/kube-proxy:v1.24.3
k8s.gcr.io/kube-scheduler:v1.24.3
k8s.gcr.io/kube-controller-manager:v1.24.3
k8s.gcr.io/etcd:3.5.3-0
k8s.gcr.io/pause:3.7
k8s.gcr.io/coredns/coredns:v1.8.6
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0920 05:07:38.013082   16936 docker.go:542] Images already preloaded, skipping extraction
I0920 05:07:38.025282   16936 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0920 05:07:38.059080   16936 command_runner.go:130] > k8s.gcr.io/kube-apiserver:v1.24.3
I0920 05:07:38.059080   16936 command_runner.go:130] > k8s.gcr.io/kube-scheduler:v1.24.3
I0920 05:07:38.059080   16936 command_runner.go:130] > k8s.gcr.io/kube-controller-manager:v1.24.3
I0920 05:07:38.059080   16936 command_runner.go:130] > k8s.gcr.io/kube-proxy:v1.24.3
I0920 05:07:38.059080   16936 command_runner.go:130] > k8s.gcr.io/etcd:3.5.3-0
I0920 05:07:38.059080   16936 command_runner.go:130] > k8s.gcr.io/pause:3.7
I0920 05:07:38.059080   16936 command_runner.go:130] > k8s.gcr.io/coredns/coredns:v1.8.6
I0920 05:07:38.059080   16936 command_runner.go:130] > gcr.io/k8s-minikube/storage-provisioner:v5
I0920 05:07:38.059080   16936 docker.go:611] Got preloaded images: -- stdout --
k8s.gcr.io/kube-apiserver:v1.24.3
k8s.gcr.io/kube-scheduler:v1.24.3
k8s.gcr.io/kube-controller-manager:v1.24.3
k8s.gcr.io/kube-proxy:v1.24.3
k8s.gcr.io/etcd:3.5.3-0
k8s.gcr.io/pause:3.7
k8s.gcr.io/coredns/coredns:v1.8.6
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0920 05:07:38.059080   16936 cache_images.go:84] Images are preloaded, skipping loading
I0920 05:07:38.069791   16936 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0920 05:07:38.142890   16936 command_runner.go:130] > cgroupfs
I0920 05:07:38.142890   16936 cni.go:95] Creating CNI manager for ""
I0920 05:07:38.142890   16936 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0920 05:07:38.142890   16936 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0920 05:07:38.142890   16936 kubeadm.go:158] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.24.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NoTaintMaster:true NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[]}
I0920 05:07:38.142890   16936 kubeadm.go:162] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.24.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0920 05:07:38.143430   16936 kubeadm.go:961] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.24.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime=remote --container-runtime-endpoint=/var/run/cri-dockerd.sock --hostname-override=minikube --image-service-endpoint=/var/run/cri-dockerd.sock --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2 --runtime-request-timeout=15m

[Install]
 config:
{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0920 05:07:38.154743   16936 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.24.3
I0920 05:07:38.163928   16936 command_runner.go:130] > kubeadm
I0920 05:07:38.163928   16936 command_runner.go:130] > kubectl
I0920 05:07:38.163928   16936 command_runner.go:130] > kubelet
I0920 05:07:38.163928   16936 binaries.go:44] Found k8s binaries, skipping transfer
I0920 05:07:38.171485   16936 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0920 05:07:38.179828   16936 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (470 bytes)
I0920 05:07:38.195785   16936 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0920 05:07:38.210019   16936 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2031 bytes)
I0920 05:07:38.249461   16936 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0920 05:07:38.254703   16936 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0920 05:07:38.266507   16936 certs.go:54] Setting up C:\Users\Esteban\.minikube\profiles\minikube for IP: 192.168.49.2
I0920 05:07:38.267091   16936 certs.go:182] skipping minikubeCA CA generation: C:\Users\Esteban\.minikube\ca.key
I0920 05:07:38.267091   16936 certs.go:182] skipping proxyClientCA CA generation: C:\Users\Esteban\.minikube\proxy-client-ca.key
I0920 05:07:38.267619   16936 certs.go:302] generating minikube-user signed cert: C:\Users\Esteban\.minikube\profiles\minikube\client.key
I0920 05:07:38.267619   16936 crypto.go:68] Generating cert C:\Users\Esteban\.minikube\profiles\minikube\client.crt with IP's: []
I0920 05:07:38.347003   16936 crypto.go:156] Writing cert to C:\Users\Esteban\.minikube\profiles\minikube\client.crt ...
I0920 05:07:38.347003   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\client.crt: {Name:mkeb516ac61b6281ea785e28af2ac8a5a8ed3d98 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:38.348006   16936 crypto.go:164] Writing key to C:\Users\Esteban\.minikube\profiles\minikube\client.key ...
I0920 05:07:38.348006   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\client.key: {Name:mkcd9ffc8b0fe78d562825c8c08bfaa3e8e906e2 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:38.349019   16936 certs.go:302] generating minikube signed cert: C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2
I0920 05:07:38.349019   16936 crypto.go:68] Generating cert C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0920 05:07:38.435004   16936 crypto.go:156] Writing cert to C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 ...
I0920 05:07:38.435004   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2: {Name:mk955cc16007eb4127e73f3001c31676541b7e16 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:38.436004   16936 crypto.go:164] Writing key to C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 ...
I0920 05:07:38.436004   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2: {Name:mkab9f8727af11a00b584272e660bc8301e36411 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:38.437008   16936 certs.go:320] copying C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 -> C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt
I0920 05:07:38.440004   16936 certs.go:324] copying C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 -> C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key
I0920 05:07:38.442042   16936 certs.go:302] generating aggregator signed cert: C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key
I0920 05:07:38.442042   16936 crypto.go:68] Generating cert C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt with IP's: []
I0920 05:07:38.613168   16936 crypto.go:156] Writing cert to C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt ...
I0920 05:07:38.613168   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt: {Name:mk3a9d72c7e119b06db26901de5540eb12d6af31 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:38.613168   16936 crypto.go:164] Writing key to C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key ...
I0920 05:07:38.613168   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key: {Name:mkcd342358400afe54770e5084d88814f41d4f90 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:38.614170   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt -> /var/lib/minikube/certs/apiserver.crt
I0920 05:07:38.614170   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key -> /var/lib/minikube/certs/apiserver.key
I0920 05:07:38.614170   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt -> /var/lib/minikube/certs/proxy-client.crt
I0920 05:07:38.618169   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key -> /var/lib/minikube/certs/proxy-client.key
I0920 05:07:38.622168   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\ca.crt -> /var/lib/minikube/certs/ca.crt
I0920 05:07:38.622168   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\ca.key -> /var/lib/minikube/certs/ca.key
I0920 05:07:38.623170   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\proxy-client-ca.crt -> /var/lib/minikube/certs/proxy-client-ca.crt
I0920 05:07:38.623170   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\proxy-client-ca.key -> /var/lib/minikube/certs/proxy-client-ca.key
I0920 05:07:38.623170   16936 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\ca-key.pem (1675 bytes)
I0920 05:07:38.623170   16936 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\ca.pem (1082 bytes)
I0920 05:07:38.623170   16936 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\cert.pem (1123 bytes)
I0920 05:07:38.624169   16936 certs.go:388] found cert: C:\Users\Esteban\.minikube\certs\C:\Users\Esteban\.minikube\certs\key.pem (1679 bytes)
I0920 05:07:38.624169   16936 vm_assets.go:163] NewFileAsset: C:\Users\Esteban\.minikube\ca.crt -> /usr/share/ca-certificates/minikubeCA.pem
I0920 05:07:38.624169   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0920 05:07:38.649942   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0920 05:07:38.673472   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0920 05:07:38.698323   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0920 05:07:38.718679   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0920 05:07:38.738336   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0920 05:07:38.757437   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0920 05:07:38.776988   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0920 05:07:38.800489   16936 ssh_runner.go:362] scp C:\Users\Esteban\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0920 05:07:38.821202   16936 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0920 05:07:38.841297   16936 ssh_runner.go:195] Run: openssl version
I0920 05:07:38.848307   16936 command_runner.go:130] > OpenSSL 1.1.1f  31 Mar 2020
I0920 05:07:38.854861   16936 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0920 05:07:38.868900   16936 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0920 05:07:38.873388   16936 command_runner.go:130] > -rw-r--r-- 1 root root 1111 Sep 20 09:09 /usr/share/ca-certificates/minikubeCA.pem
I0920 05:07:38.873388   16936 certs.go:431] hashing: -rw-r--r-- 1 root root 1111 Sep 20 09:09 /usr/share/ca-certificates/minikubeCA.pem
I0920 05:07:38.880980   16936 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0920 05:07:38.886686   16936 command_runner.go:130] > b5213941
I0920 05:07:38.894343   16936 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0920 05:07:38.904398   16936 kubeadm.go:395] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.33@sha256:73b259e144d926189cf169ae5b46bbec4e08e4e2f2bd87296054c3244f70feb8 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.24.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Esteban:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath:}
I0920 05:07:38.915131   16936 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0920 05:07:38.951235   16936 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0920 05:07:38.959700   16936 command_runner.go:130] ! ls: cannot access '/var/lib/kubelet/kubeadm-flags.env': No such file or directory
I0920 05:07:38.959727   16936 command_runner.go:130] ! ls: cannot access '/var/lib/kubelet/config.yaml': No such file or directory
I0920 05:07:38.959727   16936 command_runner.go:130] ! ls: cannot access '/var/lib/minikube/etcd': No such file or directory
I0920 05:07:38.967112   16936 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0920 05:07:38.975580   16936 kubeadm.go:221] ignoring SystemVerification for kubeadm because of docker driver
I0920 05:07:38.982386   16936 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0920 05:07:38.991004   16936 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
I0920 05:07:38.991004   16936 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
I0920 05:07:38.991004   16936 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
I0920 05:07:38.991004   16936 command_runner.go:130] ! ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0920 05:07:38.992093   16936 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0920 05:07:38.992093   16936 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.24.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0920 05:07:39.026640   16936 command_runner.go:130] ! W0920 10:07:39.025402    1181 initconfiguration.go:120] Usage of CRI endpoints without URL scheme is deprecated and can cause kubelet errors in the future. Automatically prepending scheme "unix" to the "criSocket" with value "/var/run/cri-dockerd.sock". Please update your configuration!
I0920 05:07:39.063700   16936 command_runner.go:130] ! 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0920 05:07:39.136804   16936 command_runner.go:130] ! 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0920 05:07:56.138803   16936 command_runner.go:130] > [init] Using Kubernetes version: v1.24.3
I0920 05:07:56.138803   16936 command_runner.go:130] > [preflight] Running pre-flight checks
I0920 05:07:56.139309   16936 command_runner.go:130] > [preflight] Pulling images required for setting up a Kubernetes cluster
I0920 05:07:56.139343   16936 command_runner.go:130] > [preflight] This might take a minute or two, depending on the speed of your internet connection
I0920 05:07:56.139343   16936 command_runner.go:130] > [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0920 05:07:56.139343   16936 command_runner.go:130] > [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0920 05:07:56.141591   16936 out.go:204]     ▪ Generating certificates and keys ...
I0920 05:07:56.142149   16936 command_runner.go:130] > [certs] Using existing ca certificate authority
I0920 05:07:56.142654   16936 command_runner.go:130] > [certs] Using existing apiserver certificate and key on disk
I0920 05:07:56.142719   16936 command_runner.go:130] > [certs] Generating "apiserver-kubelet-client" certificate and key
I0920 05:07:56.142719   16936 command_runner.go:130] > [certs] Generating "front-proxy-ca" certificate and key
I0920 05:07:56.142719   16936 command_runner.go:130] > [certs] Generating "front-proxy-client" certificate and key
I0920 05:07:56.142719   16936 command_runner.go:130] > [certs] Generating "etcd/ca" certificate and key
I0920 05:07:56.143269   16936 command_runner.go:130] > [certs] Generating "etcd/server" certificate and key
I0920 05:07:56.143269   16936 command_runner.go:130] > [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0920 05:07:56.143269   16936 command_runner.go:130] > [certs] Generating "etcd/peer" certificate and key
I0920 05:07:56.143820   16936 command_runner.go:130] > [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0920 05:07:56.143820   16936 command_runner.go:130] > [certs] Generating "etcd/healthcheck-client" certificate and key
I0920 05:07:56.143820   16936 command_runner.go:130] > [certs] Generating "apiserver-etcd-client" certificate and key
I0920 05:07:56.143820   16936 command_runner.go:130] > [certs] Generating "sa" key and public key
I0920 05:07:56.144337   16936 command_runner.go:130] > [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0920 05:07:56.144393   16936 command_runner.go:130] > [kubeconfig] Writing "admin.conf" kubeconfig file
I0920 05:07:56.144393   16936 command_runner.go:130] > [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0920 05:07:56.144393   16936 command_runner.go:130] > [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0920 05:07:56.144393   16936 command_runner.go:130] > [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0920 05:07:56.144943   16936 command_runner.go:130] > [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0920 05:07:56.144943   16936 command_runner.go:130] > [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0920 05:07:56.144943   16936 command_runner.go:130] > [kubelet-start] Starting the kubelet
I0920 05:07:56.144943   16936 command_runner.go:130] > [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0920 05:07:56.147655   16936 out.go:204]     ▪ Booting up control plane ...
I0920 05:07:56.148207   16936 command_runner.go:130] > [control-plane] Creating static Pod manifest for "kube-apiserver"
I0920 05:07:56.148207   16936 command_runner.go:130] > [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0920 05:07:56.148711   16936 command_runner.go:130] > [control-plane] Creating static Pod manifest for "kube-scheduler"
I0920 05:07:56.148752   16936 command_runner.go:130] > [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0920 05:07:56.148752   16936 command_runner.go:130] > [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0920 05:07:56.148752   16936 command_runner.go:130] > [apiclient] All control plane components are healthy after 12.003182 seconds
I0920 05:07:56.149273   16936 command_runner.go:130] > [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0920 05:07:56.149273   16936 command_runner.go:130] > [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0920 05:07:56.149273   16936 command_runner.go:130] > [upload-certs] Skipping phase. Please see --upload-certs
I0920 05:07:56.149801   16936 command_runner.go:130] > [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0920 05:07:56.149801   16936 command_runner.go:130] > [bootstrap-token] Using token: uxayrl.cjlymqhy7frxe2ib
I0920 05:07:56.152022   16936 out.go:204]     ▪ Configuring RBAC rules ...
I0920 05:07:56.152545   16936 command_runner.go:130] > [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0920 05:07:56.152545   16936 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0920 05:07:56.153106   16936 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0920 05:07:56.153106   16936 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0920 05:07:56.153106   16936 command_runner.go:130] > [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0920 05:07:56.153661   16936 command_runner.go:130] > [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0920 05:07:56.153661   16936 command_runner.go:130] > [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0920 05:07:56.153661   16936 command_runner.go:130] > [addons] Applied essential addon: CoreDNS
I0920 05:07:56.153661   16936 command_runner.go:130] > [addons] Applied essential addon: kube-proxy
I0920 05:07:56.154192   16936 command_runner.go:130] > Your Kubernetes control-plane has initialized successfully!
I0920 05:07:56.154192   16936 command_runner.go:130] > To start using your cluster, you need to run the following as a regular user:
I0920 05:07:56.154192   16936 command_runner.go:130] >   mkdir -p $HOME/.kube
I0920 05:07:56.154192   16936 command_runner.go:130] >   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0920 05:07:56.154192   16936 command_runner.go:130] >   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0920 05:07:56.154192   16936 command_runner.go:130] > Alternatively, if you are the root user, you can run:
I0920 05:07:56.154712   16936 command_runner.go:130] >   export KUBECONFIG=/etc/kubernetes/admin.conf
I0920 05:07:56.154712   16936 command_runner.go:130] > You should now deploy a pod network to the cluster.
I0920 05:07:56.154712   16936 command_runner.go:130] > Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0920 05:07:56.155233   16936 command_runner.go:130] >   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0920 05:07:56.155249   16936 command_runner.go:130] > You can now join any number of control-plane nodes by copying certificate authorities
I0920 05:07:56.155249   16936 command_runner.go:130] > and service account keys on each node and then running the following as root:
I0920 05:07:56.155249   16936 command_runner.go:130] >   kubeadm join control-plane.minikube.internal:8443 --token uxayrl.cjlymqhy7frxe2ib \
I0920 05:07:56.155771   16936 command_runner.go:130] > 	--discovery-token-ca-cert-hash sha256:73202b2265c3b3018d12119f3c78685654b918967fd5f268db3bf3b4d7e92013 \
I0920 05:07:56.155771   16936 command_runner.go:130] > 	--control-plane 
I0920 05:07:56.155771   16936 command_runner.go:130] > Then you can join any number of worker nodes by running the following on each as root:
I0920 05:07:56.155771   16936 command_runner.go:130] > kubeadm join control-plane.minikube.internal:8443 --token uxayrl.cjlymqhy7frxe2ib \
I0920 05:07:56.156295   16936 command_runner.go:130] > 	--discovery-token-ca-cert-hash sha256:73202b2265c3b3018d12119f3c78685654b918967fd5f268db3bf3b4d7e92013 
I0920 05:07:56.156295   16936 cni.go:95] Creating CNI manager for ""
I0920 05:07:56.156295   16936 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0920 05:07:56.156295   16936 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0920 05:07:56.167055   16936 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.24.3/kubectl label nodes minikube.k8s.io/version=v1.26.1 minikube.k8s.io/commit=62e108c3dfdec8029a890ad6d8ef96b6461426dc minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2022_09_20T05_07_56_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0920 05:07:56.167055   16936 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.24.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0920 05:07:56.238794   16936 command_runner.go:130] > -16
I0920 05:07:56.238794   16936 ops.go:34] apiserver oom_adj: -16
I0920 05:07:56.464665   16936 command_runner.go:130] > clusterrolebinding.rbac.authorization.k8s.io/minikube-rbac created
I0920 05:07:56.464665   16936 kubeadm.go:1045] duration metric: took 308.3699ms to wait for elevateKubeSystemPrivileges.
I0920 05:07:56.837915   16936 command_runner.go:130] > node/minikube labeled
I0920 05:07:56.837915   16936 kubeadm.go:397] StartCluster complete in 17.9335165s
I0920 05:07:56.837915   16936 settings.go:142] acquiring lock: {Name:mkde5d9e1a0e909149121562a1b3a53757a9972f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:56.837915   16936 settings.go:150] Updating kubeconfig:  C:\Users\Esteban\.kube\config
I0920 05:07:56.839831   16936 lock.go:35] WriteFile acquiring C:\Users\Esteban\.kube\config: {Name:mk4c8b40f2da3a85ca70096479e8c468d096d99f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0920 05:07:56.845683   16936 loader.go:372] Config loaded from file:  C:\Users\Esteban\.kube\config
I0920 05:07:56.845683   16936 kapi.go:59] client config for minikube: &rest.Config{Host:"https://127.0.0.1:55633", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", UID:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.crt", KeyFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.key", CAFile:"C:\\Users\\Esteban\\.minikube\\ca.crt", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1803b20), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}
I0920 05:07:56.846790   16936 cert_rotation.go:137] Starting client certificate rotation controller
I0920 05:07:56.846790   16936 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55633/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale'
I0920 05:07:56.847325   16936 round_trippers.go:510] HTTP Trace: Dial to tcp:127.0.0.1:55633 succeed
I0920 05:07:56.855124   16936 round_trippers.go:553] GET https://127.0.0.1:55633/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale 200 OK in 8 milliseconds
I0920 05:07:56.855124   16936 round_trippers.go:570] HTTP Statistics: DNSLookup 0 ms Dial 0 ms TLSHandshake 5 ms ServerProcessing 2 ms Duration 8 ms
I0920 05:07:56.855124   16936 round_trippers.go:577] Response Headers:
I0920 05:07:56.855124   16936 round_trippers.go:580]     Audit-Id: 0fb4fa1b-f86c-493a-b1d7-0c6361d514dd
I0920 05:07:56.855124   16936 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:07:56.855124   16936 round_trippers.go:580]     Content-Type: application/json
I0920 05:07:56.855124   16936 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 7b924065-560b-487a-812a-6f65957991a4
I0920 05:07:56.855124   16936 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 6e8aaf3b-b0cd-4880-bbe8-b4dc1a076a99
I0920 05:07:56.855124   16936 round_trippers.go:580]     Content-Length: 291
I0920 05:07:56.855124   16936 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:07:56 GMT
I0920 05:07:56.855124   16936 request.go:1073] Response Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"d1c17869-d335-487f-b9fb-c73743e4ebd3","resourceVersion":"253","creationTimestamp":"2022-09-20T10:07:56Z"},"spec":{"replicas":2},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:07:56.855665   16936 request.go:1073] Request Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"d1c17869-d335-487f-b9fb-c73743e4ebd3","resourceVersion":"253","creationTimestamp":"2022-09-20T10:07:56Z"},"spec":{"replicas":1},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:07:56.855665   16936 round_trippers.go:466] curl -v -XPUT  -H "Content-Type: application/json" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" -H "Accept: application/json, */*" 'https://127.0.0.1:55633/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale'
I0920 05:07:56.859457   16936 round_trippers.go:553] PUT https://127.0.0.1:55633/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale 200 OK in 3 milliseconds
I0920 05:07:56.859457   16936 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 3 ms Duration 3 ms
I0920 05:07:56.859457   16936 round_trippers.go:577] Response Headers:
I0920 05:07:56.859457   16936 round_trippers.go:580]     Audit-Id: 3ae5b1fc-1c6c-4739-b0fe-8b32cef8808e
I0920 05:07:56.859457   16936 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:07:56.859457   16936 round_trippers.go:580]     Content-Type: application/json
I0920 05:07:56.859457   16936 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 7b924065-560b-487a-812a-6f65957991a4
I0920 05:07:56.859457   16936 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 6e8aaf3b-b0cd-4880-bbe8-b4dc1a076a99
I0920 05:07:56.859457   16936 round_trippers.go:580]     Content-Length: 291
I0920 05:07:56.859457   16936 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:07:56 GMT
I0920 05:07:56.859457   16936 request.go:1073] Response Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"d1c17869-d335-487f-b9fb-c73743e4ebd3","resourceVersion":"279","creationTimestamp":"2022-09-20T10:07:56Z"},"spec":{"replicas":1},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:07:57.365841   16936 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55633/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale'
I0920 05:07:57.368670   16936 round_trippers.go:553] GET https://127.0.0.1:55633/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale 200 OK in 2 milliseconds
I0920 05:07:57.368670   16936 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 2 ms Duration 2 ms
I0920 05:07:57.368670   16936 round_trippers.go:577] Response Headers:
I0920 05:07:57.368670   16936 round_trippers.go:580]     Content-Type: application/json
I0920 05:07:57.368670   16936 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 7b924065-560b-487a-812a-6f65957991a4
I0920 05:07:57.368670   16936 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 6e8aaf3b-b0cd-4880-bbe8-b4dc1a076a99
I0920 05:07:57.368670   16936 round_trippers.go:580]     Content-Length: 291
I0920 05:07:57.368670   16936 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:07:57 GMT
I0920 05:07:57.368670   16936 round_trippers.go:580]     Audit-Id: 0b45dd2f-577c-4c0b-9436-bbf059ed69bf
I0920 05:07:57.368670   16936 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:07:57.368670   16936 request.go:1073] Response Body: {"kind":"Scale","apiVersion":"autoscaling/v1","metadata":{"name":"coredns","namespace":"kube-system","uid":"d1c17869-d335-487f-b9fb-c73743e4ebd3","resourceVersion":"279","creationTimestamp":"2022-09-20T10:07:56Z"},"spec":{"replicas":1},"status":{"replicas":0,"selector":"k8s-app=kube-dns"}}
I0920 05:07:57.368670   16936 kapi.go:244] deployment "coredns" in namespace "kube-system" and context "minikube" rescaled to 1
I0920 05:07:57.368670   16936 start.go:211] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.24.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0920 05:07:57.368670   16936 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0920 05:07:57.373437   16936 out.go:177] 🔎  Verifying Kubernetes components...
I0920 05:07:57.369210   16936 addons.go:412] enableAddons start: toEnable=map[], additional=[]
I0920 05:07:57.369210   16936 config.go:180] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.24.3
I0920 05:07:57.375052   16936 addons.go:65] Setting storage-provisioner=true in profile "minikube"
I0920 05:07:57.375052   16936 addons.go:65] Setting default-storageclass=true in profile "minikube"
I0920 05:07:57.375052   16936 addons.go:153] Setting addon storage-provisioner=true in "minikube"
W0920 05:07:57.375052   16936 addons.go:162] addon storage-provisioner should already be in state true
I0920 05:07:57.375052   16936 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0920 05:07:57.375584   16936 host.go:66] Checking if "minikube" exists ...
I0920 05:07:57.384606   16936 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0920 05:07:57.407009   16936 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:07:57.407546   16936 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:07:57.434531   16936 command_runner.go:130] > apiVersion: v1
I0920 05:07:57.434531   16936 command_runner.go:130] > data:
I0920 05:07:57.434531   16936 command_runner.go:130] >   Corefile: |
I0920 05:07:57.434531   16936 command_runner.go:130] >     .:53 {
I0920 05:07:57.434531   16936 command_runner.go:130] >         errors
I0920 05:07:57.434531   16936 command_runner.go:130] >         health {
I0920 05:07:57.434531   16936 command_runner.go:130] >            lameduck 5s
I0920 05:07:57.434531   16936 command_runner.go:130] >         }
I0920 05:07:57.434531   16936 command_runner.go:130] >         ready
I0920 05:07:57.434531   16936 command_runner.go:130] >         kubernetes cluster.local in-addr.arpa ip6.arpa {
I0920 05:07:57.434531   16936 command_runner.go:130] >            pods insecure
I0920 05:07:57.434531   16936 command_runner.go:130] >            fallthrough in-addr.arpa ip6.arpa
I0920 05:07:57.434531   16936 command_runner.go:130] >            ttl 30
I0920 05:07:57.434531   16936 command_runner.go:130] >         }
I0920 05:07:57.434531   16936 command_runner.go:130] >         prometheus :9153
I0920 05:07:57.434531   16936 command_runner.go:130] >         forward . /etc/resolv.conf {
I0920 05:07:57.434531   16936 command_runner.go:130] >            max_concurrent 1000
I0920 05:07:57.434531   16936 command_runner.go:130] >         }
I0920 05:07:57.434531   16936 command_runner.go:130] >         cache 30
I0920 05:07:57.435051   16936 command_runner.go:130] >         loop
I0920 05:07:57.435087   16936 command_runner.go:130] >         reload
I0920 05:07:57.435087   16936 command_runner.go:130] >         loadbalance
I0920 05:07:57.435087   16936 command_runner.go:130] >     }
I0920 05:07:57.435087   16936 command_runner.go:130] > kind: ConfigMap
I0920 05:07:57.435087   16936 command_runner.go:130] > metadata:
I0920 05:07:57.435087   16936 command_runner.go:130] >   creationTimestamp: "2022-09-20T10:07:56Z"
I0920 05:07:57.435087   16936 command_runner.go:130] >   name: coredns
I0920 05:07:57.435087   16936 command_runner.go:130] >   namespace: kube-system
I0920 05:07:57.435087   16936 command_runner.go:130] >   resourceVersion: "249"
I0920 05:07:57.435087   16936 command_runner.go:130] >   uid: 95572f29-347e-4264-96e4-4be0dd8091f7
I0920 05:07:57.437834   16936 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.2 host.minikube.internal\n           fallthrough\n        }' | sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0920 05:07:57.456973   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0920 05:07:57.617976   16936 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0920 05:07:57.619972   16936 addons.go:345] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0920 05:07:57.619972   16936 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0920 05:07:57.630933   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:57.632518   16936 loader.go:372] Config loaded from file:  C:\Users\Esteban\.kube\config
I0920 05:07:57.633053   16936 kapi.go:59] client config for minikube: &rest.Config{Host:"https://127.0.0.1:55633", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", UID:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.crt", KeyFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.key", CAFile:"C:\\Users\\Esteban\\.minikube\\ca.crt", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1803b20), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}
I0920 05:07:57.633600   16936 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55633/apis/storage.k8s.io/v1/storageclasses'
I0920 05:07:57.636865   16936 round_trippers.go:553] GET https://127.0.0.1:55633/apis/storage.k8s.io/v1/storageclasses 200 OK in 3 milliseconds
I0920 05:07:57.636865   16936 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 3 ms Duration 3 ms
I0920 05:07:57.636865   16936 round_trippers.go:577] Response Headers:
I0920 05:07:57.636865   16936 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 6e8aaf3b-b0cd-4880-bbe8-b4dc1a076a99
I0920 05:07:57.636865   16936 round_trippers.go:580]     Content-Length: 109
I0920 05:07:57.636865   16936 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:07:57 GMT
I0920 05:07:57.636865   16936 round_trippers.go:580]     Audit-Id: 5e293d87-35d8-4610-92ae-3ca5ff95dd1d
I0920 05:07:57.636865   16936 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:07:57.636865   16936 round_trippers.go:580]     Content-Type: application/json
I0920 05:07:57.636865   16936 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 7b924065-560b-487a-812a-6f65957991a4
I0920 05:07:57.636865   16936 request.go:1073] Response Body: {"kind":"StorageClassList","apiVersion":"storage.k8s.io/v1","metadata":{"resourceVersion":"282"},"items":[]}
I0920 05:07:57.637374   16936 addons.go:153] Setting addon default-storageclass=true in "minikube"
W0920 05:07:57.637395   16936 addons.go:162] addon default-storageclass should already be in state true
I0920 05:07:57.637403   16936 host.go:66] Checking if "minikube" exists ...
I0920 05:07:57.647752   16936 loader.go:372] Config loaded from file:  C:\Users\Esteban\.kube\config
I0920 05:07:57.648303   16936 kapi.go:59] client config for minikube: &rest.Config{Host:"https://127.0.0.1:55633", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", UID:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.crt", KeyFile:"C:\\Users\\Esteban\\.minikube\\profiles\\minikube\\client.key", CAFile:"C:\\Users\\Esteban\\.minikube\\ca.crt", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8(nil), NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(0x1803b20), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), WarningHandler:rest.WarningHandler(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil), Proxy:(func(*http.Request) (*url.URL, error))(nil)}
I0920 05:07:57.648856   16936 api_server.go:51] waiting for apiserver process to appear ...
I0920 05:07:57.661057   16936 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0920 05:07:57.675717   16936 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0920 05:07:57.800851   16936 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55634 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:07:57.831605   16936 addons.go:345] installing /etc/kubernetes/addons/storageclass.yaml
I0920 05:07:57.831605   16936 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0920 05:07:57.845445   16936 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0920 05:07:57.949294   16936 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.24.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0920 05:07:58.017289   16936 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55634 SSHKeyPath:C:\Users\Esteban\.minikube\machines\minikube\id_rsa Username:docker}
I0920 05:07:58.157840   16936 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.24.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0920 05:07:58.448024   16936 command_runner.go:130] > configmap/coredns replaced
I0920 05:07:58.448024   16936 ssh_runner.go:235] Completed: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.2 host.minikube.internal\n           fallthrough\n        }' | sudo /var/lib/minikube/binaries/v1.24.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -": (1.0101904s)
I0920 05:07:58.448024   16936 start.go:809] {"host.minikube.internal": 192.168.65.2} host record injected into CoreDNS
I0920 05:07:58.448024   16936 command_runner.go:130] > 1778
I0920 05:07:58.448024   16936 api_server.go:71] duration metric: took 1.0793544s to wait for apiserver process to appear ...
I0920 05:07:58.448024   16936 api_server.go:87] waiting for apiserver healthz status ...
I0920 05:07:58.448024   16936 api_server.go:240] Checking apiserver healthz at https://127.0.0.1:55633/healthz ...
I0920 05:07:58.457280   16936 api_server.go:266] https://127.0.0.1:55633/healthz returned 200:
ok
I0920 05:07:58.457280   16936 round_trippers.go:466] curl -v -XGET  -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" -H "Accept: application/json, */*" 'https://127.0.0.1:55633/version'
I0920 05:07:58.459930   16936 round_trippers.go:553] GET https://127.0.0.1:55633/version 200 OK in 2 milliseconds
I0920 05:07:58.459941   16936 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 2 ms Duration 2 ms
I0920 05:07:58.459941   16936 round_trippers.go:577] Response Headers:
I0920 05:07:58.459941   16936 round_trippers.go:580]     Content-Type: application/json
I0920 05:07:58.459941   16936 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 7b924065-560b-487a-812a-6f65957991a4
I0920 05:07:58.459941   16936 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 6e8aaf3b-b0cd-4880-bbe8-b4dc1a076a99
I0920 05:07:58.459941   16936 round_trippers.go:580]     Content-Length: 263
I0920 05:07:58.459941   16936 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:07:58 GMT
I0920 05:07:58.459941   16936 round_trippers.go:580]     Audit-Id: f821b7d8-bcf7-4fed-8cba-fb2a4cf2747d
I0920 05:07:58.459941   16936 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:07:58.459941   16936 request.go:1073] Response Body: {
  "major": "1",
  "minor": "24",
  "gitVersion": "v1.24.3",
  "gitCommit": "aef86a93758dc3cb2c658dd9657ab4ad4afc21cb",
  "gitTreeState": "clean",
  "buildDate": "2022-07-13T14:23:26Z",
  "goVersion": "go1.18.3",
  "compiler": "gc",
  "platform": "linux/amd64"
}
I0920 05:07:58.459941   16936 api_server.go:140] control plane version: v1.24.3
I0920 05:07:58.459941   16936 api_server.go:130] duration metric: took 11.9164ms to wait for apiserver health ...
I0920 05:07:58.459941   16936 system_pods.go:43] waiting for kube-system pods to appear ...
I0920 05:07:58.459941   16936 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" 'https://127.0.0.1:55633/api/v1/namespaces/kube-system/pods'
I0920 05:07:58.463813   16936 round_trippers.go:553] GET https://127.0.0.1:55633/api/v1/namespaces/kube-system/pods 200 OK in 3 milliseconds
I0920 05:07:58.463813   16936 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 3 ms Duration 3 ms
I0920 05:07:58.463813   16936 round_trippers.go:577] Response Headers:
I0920 05:07:58.463813   16936 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:07:58.463813   16936 round_trippers.go:580]     Content-Type: application/json
I0920 05:07:58.463813   16936 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 7b924065-560b-487a-812a-6f65957991a4
I0920 05:07:58.463813   16936 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 6e8aaf3b-b0cd-4880-bbe8-b4dc1a076a99
I0920 05:07:58.463813   16936 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:07:58 GMT
I0920 05:07:58.463813   16936 round_trippers.go:580]     Audit-Id: ceeb48f6-1419-47e7-9d31-23bd3a665190
I0920 05:07:58.463813   16936 request.go:1073] Response Body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"283"},"items":[{"metadata":{"name":"etcd-minikube","namespace":"kube-system","uid":"2e6801ee-62d6-47f1-97cd-c80b4883dac9","resourceVersion":"277","creationTimestamp":"2022-09-20T10:07:56Z","labels":{"component":"etcd","tier":"control-plane"},"annotations":{"kubeadm.kubernetes.io/etcd.advertise-client-urls":"https://192.168.49.2:2379","kubernetes.io/config.hash":"906edd533192a4db2396a938662a5271","kubernetes.io/config.mirror":"906edd533192a4db2396a938662a5271","kubernetes.io/config.seen":"2022-09-20T10:07:56.091737800Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"96f9c63b-03c7-457b-9661-b5bd8e9a94fe","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubeadm.kubernetes.io/etcd.advertise-client-urls":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96f9c63b-03c7-457b-9661-b5bd8e9a94fe\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"etcd\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{},"f:memory":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/lib/minikube/certs/etcd\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/var/lib/minikube/etcd\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"etcd-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"etcd-data\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}}]},"spec":{"volumes":[{"name":"etcd-certs","hostPath":{"path":"/var/lib/minikube/certs/etcd","type":"DirectoryOrCreate"}},{"name":"etcd-data","hostPath":{"path":"/var/lib/minikube/etcd","type":"DirectoryOrCreate"}}],"containers":[{"name":"etcd","image":"k8s.gcr.io/etcd:3.5.3-0","command":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"],"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"name":"etcd-data","mountPath":"/var/lib/minikube/etcd"},{"name":"etcd-certs","mountPath":"/var/lib/minikube/certs/etcd"}],"livenessProbe":{"httpGet":{"path":"/health","port":2381,"host":"127.0.0.1","scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"startupProbe":{"httpGet":{"path":"/health","port":2381,"host":"127.0.0.1","scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Pending","qosClass":"Burstable"}},{"metadata":{"name":"kube-apiserver-minikube","namespace":"kube-system","uid":"248a082a-ef3b-44b2-958a-7ef9d2a12ba5","resourceVersion":"275","creationTimestamp":"2022-09-20T10:07:56Z","labels":{"component":"kube-apiserver","tier":"control-plane"},"annotations":{"kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint":"192.168.49.2:8443","kubernetes.io/config.hash":"af8a252bb89a737e9c95199d01283487","kubernetes.io/config.mirror":"af8a252bb89a737e9c95199d01283487","kubernetes.io/config.seen":"2022-09-20T10:07:56.091740300Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"96f9c63b-03c7-457b-9661-b5bd8e9a94fe","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96f9c63b-03c7-457b-9661-b5bd8e9a94fe\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-apiserver\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:readinessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/ssl/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/local/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/var/lib/minikube/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"ca-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"etc-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"k8s-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-local-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}}]},"spec":{"volumes":[{"name":"ca-certs","hostPath":{"path":"/etc/ssl/certs","type":"DirectoryOrCreate"}},{"name":"etc-ca-certificates","hostPath":{"path":"/etc/ca-certificates","type":"DirectoryOrCreate"}},{"name":"k8s-certs","hostPath":{"path":"/var/lib/minikube/certs","type":"DirectoryOrCreate"}},{"name":"usr-local-share-ca-certificates","hostPath":{"path":"/usr/local/share/ca-certificates","type":"DirectoryOrCreate"}},{"name":"usr-share-ca-certificates","hostPath":{"path":"/usr/share/ca-certificates","type":"DirectoryOrCreate"}}],"containers":[{"name":"kube-apiserver","image":"k8s.gcr.io/kube-apiserver:v1.24.3","command":["kube-apiserver","--advertise-address=192.168.49.2","--allow-privileged=true","--authorization-mode=Node,RBAC","--client-ca-file=/var/lib/minikube/certs/ca.crt","--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota","--enable-bootstrap-token-auth=true","--etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt","--etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt","--etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key","--etcd-servers=https://127.0.0.1:2379","--kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt","--kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key","--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname","--proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt","--proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key","--requestheader-allowed-names=front-proxy-client","--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt","--requestheader-extra-headers-prefix=X-Remote-Extra-","--requestheader-group-headers=X-Remote-Group","--requestheader-username-headers=X-Remote-User","--secure-port=8443","--service-account-issuer=https://kubernetes.default.svc.cluster.local","--service-account-key-file=/var/lib/minikube/certs/sa.pub","--service-account-signing-key-file=/var/lib/minikube/certs/sa.key","--service-cluster-ip-range=10.96.0.0/12","--tls-cert-file=/var/lib/minikube/certs/apiserver.crt","--tls-private-key-file=/var/lib/minikube/certs/apiserver.key"],"resources":{"requests":{"cpu":"250m"}},"volumeMounts":[{"name":"ca-certs","readOnly":true,"mountPath":"/etc/ssl/certs"},{"name":"etc-ca-certificates","readOnly":true,"mountPath":"/etc/ca-certificates"},{"name":"k8s-certs","readOnly":true,"mountPath":"/var/lib/minikube/certs"},{"name":"usr-local-share-ca-certificates","readOnly":true,"mountPath":"/usr/local/share/ca-certificates"},{"name":"usr-share-ca-certificates","readOnly":true,"mountPath":"/usr/share/ca-certificates"}],"livenessProbe":{"httpGet":{"path":"/livez","port":8443,"host":"192.168.49.2","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"readinessProbe":{"httpGet":{"path":"/readyz","port":8443,"host":"192.168.49.2","scheme":"HTTPS"},"timeoutSeconds":15,"periodSeconds":1,"successThreshold":1,"failureThreshold":3},"startupProbe":{"httpGet":{"path":"/livez","port":8443,"host":"192.168.49.2","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Pending","qosClass":"Burstable"}},{"metadata":{"name":"kube-controller-manager-minikube","namespace":"kube-system","uid":"4f6436aa-aac2-447f-8b9d-1a88d3468879","resourceVersion":"274","creationTimestamp":"2022-09-20T10:07:56Z","labels":{"component":"kube-controller-manager","tier":"control-plane"},"annotations":{"kubernetes.io/config.hash":"76444121a189d8a30add20fb32ab6d4e","kubernetes.io/config.mirror":"76444121a189d8a30add20fb32ab6d4e","kubernetes.io/config.seen":"2022-09-20T10:07:56.091715600Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"96f9c63b-03c7-457b-9661-b5bd8e9a94fe","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96f9c63b-03c7-457b-9661-b5bd8e9a94fe\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-controller-manager\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/kubernetes/controller-manager.conf\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/etc/ssl/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\"}":{".":{},"f:mountPath":{},"f:name":{}},"k:{\"mountPath\":\"/usr/local/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/usr/share/ca-certificates\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}},"k:{\"mountPath\":\"/var/lib/minikube/certs\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"ca-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"etc-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"flexvolume-dir\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"k8s-certs\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"kubeconfig\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-local-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}},"k:{\"name\":\"usr-share-ca-certificates\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}}]},"spec":{"volumes":[{"name":"ca-certs","hostPath":{"path":"/etc/ssl/certs","type":"DirectoryOrCreate"}},{"name":"etc-ca-certificates","hostPath":{"path":"/etc/ca-certificates","type":"DirectoryOrCreate"}},{"name":"flexvolume-dir","hostPath":{"path":"/usr/libexec/kubernetes/kubelet-plugins/volume/exec","type":"DirectoryOrCreate"}},{"name":"k8s-certs","hostPath":{"path":"/var/lib/minikube/certs","type":"DirectoryOrCreate"}},{"name":"kubeconfig","hostPath":{"path":"/etc/kubernetes/controller-manager.conf","type":"FileOrCreate"}},{"name":"usr-local-share-ca-certificates","hostPath":{"path":"/usr/local/share/ca-certificates","type":"DirectoryOrCreate"}},{"name":"usr-share-ca-certificates","hostPath":{"path":"/usr/share/ca-certificates","type":"DirectoryOrCreate"}}],"containers":[{"name":"kube-controller-manager","image":"k8s.gcr.io/kube-controller-manager:v1.24.3","command":["kube-controller-manager","--allocate-node-cidrs=true","--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf","--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf","--bind-address=127.0.0.1","--client-ca-file=/var/lib/minikube/certs/ca.crt","--cluster-cidr=10.244.0.0/16","--cluster-name=mk","--cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt","--cluster-signing-key-file=/var/lib/minikube/certs/ca.key","--controllers=*,bootstrapsigner,tokencleaner","--kubeconfig=/etc/kubernetes/controller-manager.conf","--leader-elect=false","--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt","--root-ca-file=/var/lib/minikube/certs/ca.crt","--service-account-private-key-file=/var/lib/minikube/certs/sa.key","--service-cluster-ip-range=10.96.0.0/12","--use-service-account-credentials=true"],"resources":{"requests":{"cpu":"200m"}},"volumeMounts":[{"name":"ca-certs","readOnly":true,"mountPath":"/etc/ssl/certs"},{"name":"etc-ca-certificates","readOnly":true,"mountPath":"/etc/ca-certificates"},{"name":"flexvolume-dir","mountPath":"/usr/libexec/kubernetes/kubelet-plugins/volume/exec"},{"name":"k8s-certs","readOnly":true,"mountPath":"/var/lib/minikube/certs"},{"name":"kubeconfig","readOnly":true,"mountPath":"/etc/kubernetes/controller-manager.conf"},{"name":"usr-local-share-ca-certificates","readOnly":true,"mountPath":"/usr/local/share/ca-certificates"},{"name":"usr-share-ca-certificates","readOnly":true,"mountPath":"/usr/share/ca-certificates"}],"livenessProbe":{"httpGet":{"path":"/healthz","port":10257,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"startupProbe":{"httpGet":{"path":"/healthz","port":10257,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Pending","qosClass":"Burstable"}},{"metadata":{"name":"kube-scheduler-minikube","namespace":"kube-system","uid":"3fe0e76c-1207-40fb-a375-981302f7a7e4","resourceVersion":"276","creationTimestamp":"2022-09-20T10:07:56Z","labels":{"component":"kube-scheduler","tier":"control-plane"},"annotations":{"kubernetes.io/config.hash":"2e95d5efbc70e877d20097c03ba4ff89","kubernetes.io/config.mirror":"2e95d5efbc70e877d20097c03ba4ff89","kubernetes.io/config.seen":"2022-09-20T10:07:56.091734800Z","kubernetes.io/config.source":"file","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"ownerReferences":[{"apiVersion":"v1","kind":"Node","name":"minikube","uid":"96f9c63b-03c7-457b-9661-b5bd8e9a94fe","controller":true}],"managedFields":[{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/config.hash":{},"f:kubernetes.io/config.mirror":{},"f:kubernetes.io/config.seen":{},"f:kubernetes.io/config.source":{}},"f:labels":{".":{},"f:component":{},"f:tier":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96f9c63b-03c7-457b-9661-b5bd8e9a94fe\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"kube-scheduler\"}":{".":{},"f:command":{},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:resources":{".":{},"f:requests":{".":{},"f:cpu":{}}},"f:startupProbe":{".":{},"f:failureThreshold":{},"f:httpGet":{".":{},"f:host":{},"f:path":{},"f:port":{},"f:scheme":{}},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/etc/kubernetes/scheduler.conf\"}":{".":{},"f:mountPath":{},"f:name":{},"f:readOnly":{}}}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:hostNetwork":{},"f:nodeName":{},"f:priorityClassName":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{".":{},"f:seccompProfile":{".":{},"f:type":{}}},"f:terminationGracePeriodSeconds":{},"f:tolerations":{},"f:volumes":{".":{},"k:{\"name\":\"kubeconfig\"}":{".":{},"f:hostPath":{".":{},"f:path":{},"f:type":{}},"f:name":{}}}}}}]},"spec":{"volumes":[{"name":"kubeconfig","hostPath":{"path":"/etc/kubernetes/scheduler.conf","type":"FileOrCreate"}}],"containers":[{"name":"kube-scheduler","image":"k8s.gcr.io/kube-scheduler:v1.24.3","command":["kube-scheduler","--authentication-kubeconfig=/etc/kubernetes/scheduler.conf","--authorization-kubeconfig=/etc/kubernetes/scheduler.conf","--bind-address=127.0.0.1","--kubeconfig=/etc/kubernetes/scheduler.conf","--leader-elect=false"],"resources":{"requests":{"cpu":"100m"}},"volumeMounts":[{"name":"kubeconfig","readOnly":true,"mountPath":"/etc/kubernetes/scheduler.conf"}],"livenessProbe":{"httpGet":{"path":"/healthz","port":10259,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":8},"startupProbe":{"httpGet":{"path":"/healthz","port":10259,"host":"127.0.0.1","scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":15,"periodSeconds":10,"successThreshold":1,"failureThreshold":24},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeName":"minikube","hostNetwork":true,"securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"schedulerName":"default-scheduler","tolerations":[{"operator":"Exists","effect":"NoExecute"}],"priorityClassName":"system-node-critical","priority":2000001000,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Pending","qosClass":"Burstable"}}]}
I0920 05:07:58.467124   16936 system_pods.go:59] 4 kube-system pods found
I0920 05:07:58.467124   16936 system_pods.go:61] "etcd-minikube" [2e6801ee-62d6-47f1-97cd-c80b4883dac9] Pending
I0920 05:07:58.467124   16936 system_pods.go:61] "kube-apiserver-minikube" [248a082a-ef3b-44b2-958a-7ef9d2a12ba5] Pending
I0920 05:07:58.467124   16936 system_pods.go:61] "kube-controller-manager-minikube" [4f6436aa-aac2-447f-8b9d-1a88d3468879] Pending
I0920 05:07:58.467124   16936 system_pods.go:61] "kube-scheduler-minikube" [3fe0e76c-1207-40fb-a375-981302f7a7e4] Pending
I0920 05:07:58.467124   16936 system_pods.go:74] duration metric: took 7.1836ms to wait for pod list to return data ...
I0920 05:07:58.467124   16936 kubeadm.go:572] duration metric: took 1.0984544s to wait for : map[apiserver:true system_pods:true] ...
I0920 05:07:58.467124   16936 node_conditions.go:102] verifying NodePressure condition ...
I0920 05:07:58.467124   16936 round_trippers.go:466] curl -v -XGET  -H "User-Agent: minikube.exe/v0.0.0 (windows/amd64) kubernetes/$Format" -H "Accept: application/json, */*" 'https://127.0.0.1:55633/api/v1/nodes'
I0920 05:07:58.531871   16936 round_trippers.go:553] GET https://127.0.0.1:55633/api/v1/nodes 200 OK in 64 milliseconds
I0920 05:07:58.532395   16936 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 64 ms Duration 64 ms
I0920 05:07:58.532413   16936 round_trippers.go:577] Response Headers:
I0920 05:07:58.532413   16936 round_trippers.go:580]     Date: Tue, 20 Sep 2022 10:07:58 GMT
I0920 05:07:58.532413   16936 round_trippers.go:580]     Audit-Id: b6273dc6-8a8d-4df5-9c56-449320f0f0d4
I0920 05:07:58.532413   16936 round_trippers.go:580]     Cache-Control: no-cache, private
I0920 05:07:58.532413   16936 round_trippers.go:580]     Content-Type: application/json
I0920 05:07:58.532413   16936 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 7b924065-560b-487a-812a-6f65957991a4
I0920 05:07:58.532413   16936 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 6e8aaf3b-b0cd-4880-bbe8-b4dc1a076a99
I0920 05:07:58.532413   16936 request.go:1073] Response Body: {"kind":"NodeList","apiVersion":"v1","metadata":{"resourceVersion":"284"},"items":[{"metadata":{"name":"minikube","uid":"96f9c63b-03c7-457b-9661-b5bd8e9a94fe","resourceVersion":"278","creationTimestamp":"2022-09-20T10:07:55Z","labels":{"beta.kubernetes.io/arch":"amd64","beta.kubernetes.io/os":"linux","kubernetes.io/arch":"amd64","kubernetes.io/hostname":"minikube","kubernetes.io/os":"linux","minikube.k8s.io/commit":"62e108c3dfdec8029a890ad6d8ef96b6461426dc","minikube.k8s.io/name":"minikube","minikube.k8s.io/primary":"true","minikube.k8s.io/updated_at":"2022_09_20T05_07_56_0700","minikube.k8s.io/version":"v1.26.1","node-role.kubernetes.io/control-plane":"","node.kubernetes.io/exclude-from-external-load-balancers":""},"annotations":{"kubeadm.alpha.kubernetes.io/cri-socket":"unix:///var/run/cri-dockerd.sock","volumes.kubernetes.io/controller-managed-attach-detach":"true"},"managedFields":[{"manager":"kubeadm","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubeadm.alpha.kubernetes.io/cri-socket":{}},"f:labels":{"f:node-role.kubernetes.io/control-plane":{},"f:node.kubernetes.io/exclude-from-external-load-balancers":{}}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}}},{"manager":"kubectl-label","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{"f:minikube.k8s.io/commit":{},"f:minikube.k8s.io/name":{},"f:minikube.k8s.io/primary":{},"f:minikube.k8s.io/updated_at":{},"f:minikube.k8s.io/version":{}}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-09-20T10:07:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:message":{}}},"f:images":{}}},"subresource":"status"}]},"spec":{"taints":[{"key":"node.kubernetes.io/not-ready","effect":"NoSchedule"}]},"status":{"capacity":{"cpu":"12","ephemeral-storage":"263174212Ki","hugepages-1Gi":"0","hugepages-2Mi":"0","memory":"12923048Ki","pods":"110"},"allocatable":{"cpu":"12","ephemeral-storage":"263174212Ki","hugepages-1Gi":"0","hugepages-2Mi":"0","memory":"12923048Ki","pods":"110"},"conditions":[{"type":"MemoryPressure","status":"False","lastHeartbeatTime":"2022-09-20T10:07:56Z","lastTransitionTime":"2022-09-20T10:07:54Z","reason":"KubeletHasSufficientMemory","message":"kubelet has sufficient memory available"},{"type":"DiskPressure","status":"False","lastHeartbeatTime":"2022-09-20T10:07:56Z","lastTransitionTime":"2022-09-20T10:07:54Z","reason":"KubeletHasNoDiskPressure","message":"kubelet has no disk pressure"},{"type":"PIDPressure","status":"False","lastHeartbeatTime":"2022-09-20T10:07:56Z","lastTransitionTime":"2022-09-20T10:07:54Z","reason":"KubeletHasSufficientPID","message":"kubelet has sufficient PID available"},{"type":"Ready","status":"False","lastHeartbeatTime":"2022-09-20T10:07:56Z","lastTransitionTime":"2022-09-20T10:07:54Z","reason":"KubeletNotReady","message":"container runtime status check may not have completed yet"}],"addresses":[{"type":"InternalIP","address":"192.168.49.2"},{"type":"Hostname","address":"minikube"}],"daemonEndpoints":{"kubeletEndpoint":{"Port":10250}},"nodeInfo":{"machineID":"4c192b04687c403f8fbb9bc7975b21b3","systemUUID":"4c192b04687c403f8fbb9bc7975b21b3","bootID":"de31de94-2a42-4516-a4e6-7cb2de739fde","kernelVersion":"5.10.102.1-microsoft-standard-WSL2","osImage":"Ubuntu 20.04.4 LTS","containerRuntimeVersion":"docker://20.10.17","kubeletVersion":"v1.24.3","kubeProxyVersion":"v1.24.3","operatingSystem":"linux","architecture":"amd64"},"images":[{"names":["k8s.gcr.io/etcd@sha256:13f53ed1d91e2e11aac476ee9a0269fdda6cc4874eba903efd40daf50c55eee5","k8s.gcr.io/etcd:3.5.3-0"],"sizeBytes":299495233},{"names":["k8s.gcr.io/kube-apiserver@sha256:a04609b85962da7e6531d32b75f652b4fb9f5fe0b0ee0aa160856faad8ec5d96","k8s.gcr.io/kube-apiserver:v1.24.3"],"sizeBytes":129710737},{"names":["k8s.gcr.io/kube-controller-manager@sha256:f504eead8b8674ebc9067370ef51abbdc531b4a81813bfe464abccb8c76b6a53","k8s.gcr.io/kube-controller-manager:v1.24.3"],"sizeBytes":119360464},{"names":["k8s.gcr.io/kube-proxy@sha256:c1b135231b5b1a6799346cd701da4b59e5b7ef8e694ec7b04fb23b8dbe144137","k8s.gcr.io/kube-proxy:v1.24.3"],"sizeBytes":109939784},{"names":["k8s.gcr.io/kube-scheduler@sha256:e199523298224cd9f2a9a43c7c2c37fa57aff87648ed1e1de9984eba6f6005f0","k8s.gcr.io/kube-scheduler:v1.24.3"],"sizeBytes":50989989},{"names":["k8s.gcr.io/coredns/coredns@sha256:5b6ec0d6de9baaf3e92d0f66cd96a25b9edbce8716f5f15dcd1a616b3abd590e","k8s.gcr.io/coredns/coredns:v1.8.6"],"sizeBytes":46829283},{"names":["gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944","gcr.io/k8s-minikube/storage-provisioner:v5"],"sizeBytes":31465472},{"names":["k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c","k8s.gcr.io/pause:3.7"],"sizeBytes":711184},{"names":["k8s.gcr.io/pause@sha256:3d380ca8864549e74af4b29c10f9cb0956236dfb01c40ca076fb6c37253234db","k8s.gcr.io/pause:3.6"],"sizeBytes":682696}]}}]}
I0920 05:07:58.533554   16936 node_conditions.go:122] node storage ephemeral capacity is 263174212Ki
I0920 05:07:58.533554   16936 node_conditions.go:123] node cpu capacity is 12
I0920 05:07:58.533554   16936 node_conditions.go:105] duration metric: took 66.4296ms to run NodePressure ...
I0920 05:07:58.533554   16936 start.go:216] waiting for startup goroutines ...
I0920 05:07:58.578546   16936 command_runner.go:130] > serviceaccount/storage-provisioner created
I0920 05:07:58.578546   16936 command_runner.go:130] > clusterrolebinding.rbac.authorization.k8s.io/storage-provisioner created
I0920 05:07:58.578546   16936 command_runner.go:130] > role.rbac.authorization.k8s.io/system:persistent-volume-provisioner created
I0920 05:07:58.578546   16936 command_runner.go:130] > rolebinding.rbac.authorization.k8s.io/system:persistent-volume-provisioner created
I0920 05:07:58.578546   16936 command_runner.go:130] > endpoints/k8s.io-minikube-hostpath created
I0920 05:07:58.578546   16936 command_runner.go:130] > pod/storage-provisioner created
I0920 05:07:58.578546   16936 command_runner.go:130] > storageclass.storage.k8s.io/standard created
I0920 05:07:58.581952   16936 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0920 05:07:58.584180   16936 addons.go:414] enableAddons completed in 1.2149697s
I0920 05:07:58.813248   16936 start.go:506] kubectl: 1.25.1, cluster: 1.24.3 (minor skew: 1)
I0920 05:07:58.817618   16936 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
